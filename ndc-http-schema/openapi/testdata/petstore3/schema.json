{
  "collections": [],
  "functions": [
    {
      "arguments": {
        "collection_method": {
          "description": "The collection method of the invoice to retrieve. Either `charge_automatically` or `send_invoice`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "InvoicesCollectionMethod",
              "type": "named"
            }
          }
        },
        "created": {
          "description": "Only return invoices that were created during the given date interval.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "JSON",
              "type": "named"
            }
          }
        },
        "customer": {
          "description": "Only return invoices for the customer specified by this customer ID.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "due_date": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "JSON",
              "type": "named"
            }
          }
        },
        "ending_before": {
          "description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "expand": {
          "description": "Specifies which fields in the response should be expanded.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "String",
                "type": "named"
              },
              "type": "array"
            }
          }
        },
        "limit": {
          "description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          }
        },
        "starting_after": {
          "description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "status": {
          "description": "The status of the invoice, one of `draft`, `open`, `paid`, `uncollectible`, or `void`. [Learn more](https://stripe.com/docs/billing/invoices/workflow#workflow-overview)",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "InvoicesStatus",
              "type": "named"
            }
          }
        },
        "subscription": {
          "description": "Only return invoices for the subscription specified by this subscription ID.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        }
      },
      "description": "You can list all invoices, or list the invoices for a specific customer. The invoices are returned sorted by creation date, with the most recently created invoices appearing first.",
      "name": "GetInvoices",
      "result_type": {
        "name": "GetInvoicesResult",
        "type": "named"
      }
    },
    {
      "arguments": {
        "start_date": {
          "description": "The date that the IP address was entered into warmup.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Float64",
              "type": "named"
            }
          }
        },
        "status": {
          "description": "Status values that need to be considered for filter",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "PetStatus",
              "type": "named"
            }
          }
        }
      },
      "description": "Finds Pets by status",
      "name": "findPetsByStatus",
      "result_type": {
        "element_type": {
          "name": "Pet",
          "type": "named"
        },
        "type": "array"
      }
    },
    {
      "arguments": {
        "tags": {
          "description": "Tags to filter by",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "String",
                "type": "named"
              },
              "type": "array"
            }
          }
        }
      },
      "description": "Finds Pets by tags",
      "name": "findPetsByTags",
      "result_type": {
        "element_type": {
          "name": "Pet",
          "type": "named"
        },
        "type": "array"
      }
    },
    {
      "arguments": {},
      "description": "List all known architectures.",
      "name": "getArchitectures",
      "result_type": {
        "name": "GetArchitecturesResult",
        "type": "named"
      }
    },
    {
      "arguments": {
        "project_name": {
          "description": "Project name",
          "type": {
            "name": "String",
            "type": "named"
          }
        },
        "repository_name": {
          "description": "Repository name",
          "type": {
            "name": "String",
            "type": "named"
          }
        }
      },
      "description": "Show the build configuration for the specified repository.",
      "name": "getBuildProjectNameRepositoryNameBuildconfig",
      "result_type": {
        "name": "String",
        "type": "named"
      }
    },
    {
      "arguments": {},
      "description": "Returns pet inventories by status",
      "name": "getInventory",
      "result_type": {
        "name": "JSON",
        "type": "named"
      }
    },
    {
      "arguments": {
        "orderId": {
          "description": "ID of order that needs to be fetched",
          "type": {
            "name": "Int64",
            "type": "named"
          }
        }
      },
      "description": "Find purchase order by ID",
      "name": "getOrderById",
      "result_type": {
        "name": "Order",
        "type": "named"
      }
    },
    {
      "arguments": {
        "petId": {
          "description": "ID of pet to return",
          "type": {
            "name": "Int64",
            "type": "named"
          }
        }
      },
      "description": "Find pet by ID",
      "name": "getPetById",
      "result_type": {
        "name": "Pet",
        "type": "named"
      }
    },
    {
      "arguments": {
        "in": {
          "description": "Where to search and apply a XPath expression: either the list of projects or the list of packages.  Example of a result when `projects` is selected: ```                                      x86_64                        x86_64                Standard OBS instance at build.opensuse.org     This instance delivers the default build targets for OBS.     https://api.opensuse.org/public     ```  Example of a result when `packages` is selected: ```                   ```",
          "type": {
            "name": "SearchIn",
            "type": "named"
          }
        },
        "match": {
          "description": "XPath expression used to filter the results.",
          "type": {
            "name": "String",
            "type": "named"
          }
        },
        "return": {
          "description": "XPath expression that defines which values will be returned.  Instead of returning a collection of projects or packages, the result will be a collection of:   - contents of elements, when that XPath expression match elements, or,   - values of atttributes, when that XPath expression match atttributes.  Example of result, for a query string like `?in=projects&match=repository/arch='x86_64'&return=repository/name`: ```    openSUSE_Tumbleweed   15.3  ```",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "values": {
          "description": "When set to `1`, return a list of values, instead of returning a list of projects or packages.  The result will be a collection of:   - contents of elements, when the expression defined in the `match` query parameter match elements.     For example: `match=repository/arch`.   - values of atttributes, when the expression defined in the `match` query parameter match atttributes.     For example: `match=repository/name`.  Example of result, for a query string like `?in=projects&match=repository/path/project&values=1`: ```    openSUSE.org:openSUSE:Factory   openSUSE.org:openSUSE:Leap:15.3  ```",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        }
      },
      "description": "Search in projects or in packages.",
      "name": "getSearchXml",
      "result_type": {
        "name": "GetSearchXmlResult",
        "type": "named"
      }
    },
    {
      "arguments": {},
      "description": "Get snake object",
      "name": "getSnake",
      "result_type": {
        "name": "SnakeObject",
        "type": "named"
      }
    },
    {
      "arguments": {
        "username": {
          "description": "The name that needs to be fetched. Use user1 for testing.",
          "type": {
            "name": "String",
            "type": "named"
          }
        }
      },
      "description": "Get user by user name",
      "name": "getUserByName",
      "result_type": {
        "name": "User",
        "type": "named"
      }
    },
    {
      "arguments": {
        "password": {
          "description": "The password for login in clear text",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "username": {
          "description": "The user name for login",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        }
      },
      "description": "Logs user into the system",
      "name": "loginUser",
      "result_type": {
        "name": "String",
        "type": "named"
      }
    }
  ],
  "object_types": {
    "Address": {
      "fields": {
        "city": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "state": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "street": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "zip": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        }
      }
    },
    "AddressInput": {
      "fields": {
        "city": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "state": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "street": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "zip": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        }
      }
    },
    "ApiResponse": {
      "fields": {
        "code": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          }
        },
        "message": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "type": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        }
      }
    },
    "BillingMeterEvent": {
      "description": "Meter events represent actions that customers take in your system. You can use meter events to bill a customer based on their usage. Meter events are associated with billing meters, which define both the contents of the events payload and how to aggregate those events.",
      "fields": {
        "created": {
          "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
          "type": {
            "name": "UnixTime",
            "type": "named"
          }
        },
        "event_name": {
          "description": "The name of the meter event. Corresponds with the `event_name` field on a meter.",
          "type": {
            "name": "String",
            "type": "named"
          }
        },
        "identifier": {
          "description": "A unique identifier for the event.",
          "type": {
            "name": "String",
            "type": "named"
          }
        },
        "livemode": {
          "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
          "type": {
            "name": "Boolean",
            "type": "named"
          }
        },
        "object": {
          "description": "String representing the object's type. Objects of the same type share the same value.",
          "type": {
            "name": "BillingMeterEventObject",
            "type": "named"
          }
        },
        "payload": {
          "description": "The payload of the event. This contains the fields corresponding to a meter's `customer_mapping.event_payload_key` (default is `stripe_customer_id`) and `value_settings.event_payload_key` (default is `value`). Read more about the [payload](https://stripe.com/docs/billing/subscriptions/usage-based/recording-usage#payload-key-overrides).",
          "type": {
            "name": "JSON",
            "type": "named"
          }
        },
        "timestamp": {
          "description": "The timestamp passed in when creating the event. Measured in seconds since the Unix epoch.",
          "type": {
            "name": "UnixTime",
            "type": "named"
          }
        }
      }
    },
    "Book": {
      "fields": {
        "attr": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "author": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "id": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          }
        },
        "title": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        }
      }
    },
    "BookInput": {
      "fields": {
        "attr": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "author": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "id": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          }
        },
        "title": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        }
      }
    },
    "Category": {
      "fields": {
        "id": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int64",
              "type": "named"
            }
          }
        },
        "name": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        }
      }
    },
    "CategoryInput": {
      "fields": {
        "id": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int64",
              "type": "named"
            }
          }
        },
        "name": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        }
      }
    },
    "CreateFineTuningJobRequest": {
      "fields": {
        "model": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        }
      }
    },
    "CreateFineTuningJobRequestInput": {
      "fields": {
        "model": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        }
      }
    },
    "Customer": {
      "fields": {
        "address": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "Address",
                "type": "named"
              },
              "type": "array"
            }
          }
        },
        "id": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int64",
              "type": "named"
            }
          }
        },
        "username": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        }
      }
    },
    "CustomerInput": {
      "fields": {
        "address": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "AddressInput",
                "type": "named"
              },
              "type": "array"
            }
          }
        },
        "id": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int64",
              "type": "named"
            }
          }
        },
        "username": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        }
      }
    },
    "GetArchitecturesResult": {
      "fields": {
        "count": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          }
        },
        "entry": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "GetArchitecturesResultEntry",
                "type": "named"
              },
              "type": "array"
            }
          }
        },
        "name": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "rev": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "srcmd5": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "vrev": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        }
      }
    },
    "GetArchitecturesResultEntry": {
      "fields": {
        "md5": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "mtime": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "name": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "size": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "xmlValue": {
          "description": "Value of the xml field",
          "type": {
            "name": "String",
            "type": "named"
          }
        }
      }
    },
    "GetInvoicesResult": {
      "fields": {
        "has_more": {
          "description": "True if this list has another page of items after this one that can be fetched.",
          "type": {
            "name": "Boolean",
            "type": "named"
          }
        },
        "object": {
          "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
          "type": {
            "name": "InvoicesObject",
            "type": "named"
          }
        },
        "url": {
          "description": "The URL where this list can be accessed.",
          "type": {
            "name": "String",
            "type": "named"
          }
        }
      }
    },
    "GetSearchXmlResult": {
      "fields": {
        "matches": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          }
        },
        "package": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "GetSearchXmlResult1Package",
                "type": "named"
              },
              "type": "array"
            }
          }
        },
        "project": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "GetSearchXmlResult0Project",
                "type": "named"
              },
              "type": "array"
            }
          }
        }
      }
    },
    "GetSearchXmlResult0Project": {
      "fields": {
        "description": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "name": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "person": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "GetSearchXmlResult0ProjectPerson",
              "type": "named"
            }
          }
        },
        "title": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        }
      }
    },
    "GetSearchXmlResult0ProjectPerson": {
      "fields": {
        "role": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "userid": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "xmlValue": {
          "description": "Value of the xml field",
          "type": {
            "name": "String",
            "type": "named"
          }
        }
      }
    },
    "GetSearchXmlResult1Package": {
      "fields": {
        "description": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "name": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "project": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "title": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        }
      }
    },
    "Order": {
      "fields": {
        "complete": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          }
        },
        "customer": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Customer",
              "type": "named"
            }
          }
        },
        "id": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int64",
              "type": "named"
            }
          }
        },
        "petId": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int64",
              "type": "named"
            }
          }
        },
        "quantity": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          }
        },
        "shipDate": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          }
        },
        "status": {
          "description": "Order Status",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "OrderStatus",
              "type": "named"
            }
          }
        }
      }
    },
    "OrderInput": {
      "fields": {
        "complete": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          }
        },
        "customer": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "CustomerInput",
              "type": "named"
            }
          }
        },
        "id": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int64",
              "type": "named"
            }
          }
        },
        "petId": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int64",
              "type": "named"
            }
          }
        },
        "quantity": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          }
        },
        "shipDate": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          }
        },
        "status": {
          "description": "Order Status",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "OrderStatus",
              "type": "named"
            }
          }
        }
      }
    },
    "Pet": {
      "fields": {
        "category": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Category",
              "type": "named"
            }
          }
        },
        "field": {
          "description": "This empty field is returned instead of the list of scopes if the user making the call doesn't have the authorization required.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "JSON",
              "type": "named"
            }
          }
        },
        "id": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int64",
              "type": "named"
            }
          }
        },
        "name": {
          "type": {
            "name": "String",
            "type": "named"
          }
        },
        "photoUrls": {
          "type": {
            "element_type": {
              "name": "String",
              "type": "named"
            },
            "type": "array"
          }
        },
        "status": {
          "description": "pet status in the store",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "PetStatus",
              "type": "named"
            }
          }
        },
        "tags": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "Tag",
                "type": "named"
              },
              "type": "array"
            }
          }
        }
      }
    },
    "PetInput": {
      "fields": {
        "category": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "CategoryInput",
              "type": "named"
            }
          }
        },
        "field": {
          "description": "This empty field is returned instead of the list of scopes if the user making the call doesn't have the authorization required.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "JSON",
              "type": "named"
            }
          }
        },
        "id": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int64",
              "type": "named"
            }
          }
        },
        "name": {
          "type": {
            "name": "String",
            "type": "named"
          }
        },
        "photoUrls": {
          "type": {
            "element_type": {
              "name": "String",
              "type": "named"
            },
            "type": "array"
          }
        },
        "status": {
          "description": "pet status in the store",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "PetStatus",
              "type": "named"
            }
          }
        },
        "tags": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "TagInput",
                "type": "named"
              },
              "type": "array"
            }
          }
        }
      }
    },
    "PostBillingMeterEventsBodyInput": {
      "fields": {
        "event_name": {
          "description": "The name of the meter event. Corresponds with the `event_name` field on a meter.",
          "type": {
            "name": "String",
            "type": "named"
          }
        },
        "expand": {
          "description": "Specifies which fields in the response should be expanded.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "String",
                "type": "named"
              },
              "type": "array"
            }
          }
        },
        "identifier": {
          "description": "A unique identifier for the event. If not provided, one is generated. We recommend using UUID-like identifiers. We will enforce uniqueness within a rolling period of at least 24 hours. The enforcement of uniqueness primarily addresses issues arising from accidental retries or other problems occurring within extremely brief time intervals. This approach helps prevent duplicate entries and ensures data integrity in high-frequency operations.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "payload": {
          "description": "The payload of the event. This must contain the fields corresponding to a meter's `customer_mapping.event_payload_key` (default is `stripe_customer_id`) and `value_settings.event_payload_key` (default is `value`). Read more about the [payload](https://docs.stripe.com/billing/subscriptions/usage-based/recording-usage#payload-key-overrides).",
          "type": {
            "name": "JSON",
            "type": "named"
          }
        },
        "timestamp": {
          "description": "The time of the event. Measured in seconds since the Unix epoch. Must be within the past 35 calendar days or up to 5 minutes in the future. Defaults to current timestamp if not specified.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "UnixTime",
              "type": "named"
            }
          }
        }
      }
    },
    "PostCheckoutSessionsBodyAfterExpirationInput": {
      "description": "Configure actions after a Checkout Session has expired.",
      "fields": {
        "recovery": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "PostCheckoutSessionsBodyAfterExpirationRecoveryInput",
              "type": "named"
            }
          }
        }
      }
    },
    "PostCheckoutSessionsBodyAfterExpirationRecoveryInput": {
      "fields": {
        "allow_promotion_codes": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          }
        },
        "enabled": {
          "type": {
            "name": "Boolean",
            "type": "named"
          }
        }
      }
    },
    "PostCheckoutSessionsBodyAutomaticTaxInput": {
      "description": "Settings for automatic tax lookup for this session and resulting payments, invoices, and subscriptions.",
      "fields": {
        "enabled": {
          "type": {
            "name": "Boolean",
            "type": "named"
          }
        },
        "liability": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "PostCheckoutSessionsBodyAutomaticTaxLiabilityInput",
              "type": "named"
            }
          }
        }
      }
    },
    "PostCheckoutSessionsBodyAutomaticTaxLiabilityInput": {
      "fields": {
        "account": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "type": {
          "type": {
            "name": "CheckoutType",
            "type": "named"
          }
        }
      }
    },
    "PostCheckoutSessionsBodyConsentCollectionInput": {
      "description": "Configure fields for the Checkout Session to gather active consent from customers.",
      "fields": {
        "payment_method_reuse_agreement": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "PostCheckoutSessionsBodyConsentCollectionPaymentMethodReuseAgreementInput",
              "type": "named"
            }
          }
        },
        "promotions": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "CheckoutPromotions",
              "type": "named"
            }
          }
        },
        "terms_of_service": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "CheckoutTermsOfService",
              "type": "named"
            }
          }
        }
      }
    },
    "PostCheckoutSessionsBodyConsentCollectionPaymentMethodReuseAgreementInput": {
      "fields": {
        "position": {
          "type": {
            "name": "CheckoutPosition",
            "type": "named"
          }
        }
      }
    },
    "PostCheckoutSessionsBodyCustomFieldsDropdownInput": {
      "fields": {
        "options": {
          "type": {
            "element_type": {
              "name": "PostCheckoutSessionsBodyCustomFieldsDropdownOptionsInput",
              "type": "named"
            },
            "type": "array"
          }
        }
      }
    },
    "PostCheckoutSessionsBodyCustomFieldsDropdownOptionsInput": {
      "fields": {
        "label": {
          "type": {
            "name": "String",
            "type": "named"
          }
        },
        "value": {
          "type": {
            "name": "String",
            "type": "named"
          }
        }
      }
    },
    "PostCheckoutSessionsBodyCustomFieldsInput": {
      "fields": {
        "dropdown": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "PostCheckoutSessionsBodyCustomFieldsDropdownInput",
              "type": "named"
            }
          }
        },
        "key": {
          "type": {
            "name": "String",
            "type": "named"
          }
        },
        "label": {
          "type": {
            "name": "PostCheckoutSessionsBodyCustomFieldsLabelInput",
            "type": "named"
          }
        },
        "numeric": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "PostCheckoutSessionsBodyCustomFieldsNumericInput",
              "type": "named"
            }
          }
        },
        "optional": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          }
        },
        "text": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "PostCheckoutSessionsBodyCustomFieldsTextInput",
              "type": "named"
            }
          }
        },
        "type": {
          "type": {
            "name": "PostCheckoutSessionsBodyCustomFieldsType",
            "type": "named"
          }
        }
      }
    },
    "PostCheckoutSessionsBodyCustomFieldsLabelInput": {
      "fields": {
        "custom": {
          "type": {
            "name": "String",
            "type": "named"
          }
        },
        "type": {
          "type": {
            "name": "PostCheckoutSessionsBodyCustomFieldsLabelType",
            "type": "named"
          }
        }
      }
    },
    "PostCheckoutSessionsBodyCustomFieldsNumericInput": {
      "fields": {
        "maximum_length": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          }
        },
        "minimum_length": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          }
        }
      }
    },
    "PostCheckoutSessionsBodyCustomFieldsTextInput": {
      "fields": {
        "maximum_length": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          }
        },
        "minimum_length": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          }
        }
      }
    },
    "PostCheckoutSessionsBodyCustomTextAfterSubmitInput": {
      "fields": {
        "message": {
          "type": {
            "name": "String",
            "type": "named"
          }
        }
      }
    },
    "PostCheckoutSessionsBodyCustomTextInput": {
      "description": "Display additional text for your customers using custom text.",
      "fields": {
        "after_submit": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "PostCheckoutSessionsBodyCustomTextAfterSubmitInput",
              "type": "named"
            }
          }
        },
        "shipping_address": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "PostCheckoutSessionsBodyCustomTextShippingAddressInput",
              "type": "named"
            }
          }
        },
        "submit": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "PostCheckoutSessionsBodyCustomTextSubmitInput",
              "type": "named"
            }
          }
        },
        "terms_of_service_acceptance": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "PostCheckoutSessionsBodyCustomTextTermsOfServiceAcceptanceInput",
              "type": "named"
            }
          }
        }
      }
    },
    "PostCheckoutSessionsBodyCustomTextShippingAddressInput": {
      "fields": {
        "message": {
          "type": {
            "name": "String",
            "type": "named"
          }
        }
      }
    },
    "PostCheckoutSessionsBodyCustomTextSubmitInput": {
      "fields": {
        "message": {
          "type": {
            "name": "String",
            "type": "named"
          }
        }
      }
    },
    "PostCheckoutSessionsBodyCustomTextTermsOfServiceAcceptanceInput": {
      "fields": {
        "message": {
          "type": {
            "name": "String",
            "type": "named"
          }
        }
      }
    },
    "PostCheckoutSessionsBodyCustomerUpdateInput": {
      "description": "Controls what fields on Customer can be updated by the Checkout Session. Can only be provided when `customer` is provided.",
      "fields": {
        "address": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "CheckoutAddress",
              "type": "named"
            }
          }
        },
        "name": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "CheckoutName",
              "type": "named"
            }
          }
        },
        "shipping": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "CheckoutShipping",
              "type": "named"
            }
          }
        }
      }
    },
    "PostCheckoutSessionsBodyDiscountsInput": {
      "fields": {
        "coupon": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "promotion_code": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        }
      }
    },
    "PostCheckoutSessionsBodyInput": {
      "fields": {
        "after_expiration": {
          "description": "Configure actions after a Checkout Session has expired.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "PostCheckoutSessionsBodyAfterExpirationInput",
              "type": "named"
            }
          }
        },
        "allow_promotion_codes": {
          "description": "Enables user redeemable promotion codes.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          }
        },
        "automatic_tax": {
          "description": "Settings for automatic tax lookup for this session and resulting payments, invoices, and subscriptions.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "PostCheckoutSessionsBodyAutomaticTaxInput",
              "type": "named"
            }
          }
        },
        "billing_address_collection": {
          "description": "Specify whether Checkout should collect the customer's billing address. Defaults to `auto`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "CheckoutBillingAddressCollection",
              "type": "named"
            }
          }
        },
        "cancel_url": {
          "description": "If set, Checkout displays a back button and customers will be directed to this URL if they decide to cancel payment and return to your website.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "client_reference_id": {
          "description": "A unique string to reference the Checkout Session. This can be a customer ID, a cart ID, or similar, and can be used to reconcile the session with your internal systems.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "consent_collection": {
          "description": "Configure fields for the Checkout Session to gather active consent from customers.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "PostCheckoutSessionsBodyConsentCollectionInput",
              "type": "named"
            }
          }
        },
        "currency": {
          "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies). Required in `setup` mode when `payment_method_types` is not set.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "custom_fields": {
          "description": "Collect additional information from your customer using custom fields. Up to 3 fields are supported.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "PostCheckoutSessionsBodyCustomFieldsInput",
                "type": "named"
              },
              "type": "array"
            }
          }
        },
        "custom_text": {
          "description": "Display additional text for your customers using custom text.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "PostCheckoutSessionsBodyCustomTextInput",
              "type": "named"
            }
          }
        },
        "customer": {
          "description": "ID of an existing Customer, if one exists. In `payment` mode, the customers most recently saved card payment method will be used to prefill the email, name, card details, and billing address on the Checkout page. In `subscription` mode, the customers [default payment method](https://stripe.com/docs/api/customers/update#update_customer-invoice_settings-default_payment_method) will be used if its a card, otherwise the most recently saved card will be used. A valid billing address, billing name and billing email are required on the payment method for Checkout to prefill the customer's card details.  If the Customer already has a valid [email](https://stripe.com/docs/api/customers/object#customer_object-email) set, the email will be prefilled and not editable in Checkout. If the Customer does not have a valid `email`, Checkout will set the email entered during the session on the Customer.  If blank for Checkout Sessions in `subscription` mode or with `customer_creation` set as `always` in `payment` mode, Checkout will create a new Customer object based on information provided during the payment flow.  You can set [`payment_intent_data.setup_future_usage`](https://stripe.com/docs/api/checkout/sessions/create#create_checkout_session-payment_intent_data-setup_future_usage) to have Checkout automatically attach the payment method to the Customer you pass in for future reuse.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "customer_creation": {
          "description": "Configure whether a Checkout Session creates a [Customer](https://stripe.com/docs/api/customers) during Session confirmation.  When a Customer is not created, you can still retrieve email, address, and other customer data entered in Checkout with [customer_details](https://stripe.com/docs/api/checkout/sessions/object#checkout_session_object-customer_details).  Sessions that don't create Customers instead are grouped by [guest customers](https://stripe.com/docs/payments/checkout/guest-customers) in the Dashboard. Promotion codes limited to first time customers will return invalid for these Sessions.  Can only be set in `payment` and `setup` mode.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "CheckoutCustomerCreation",
              "type": "named"
            }
          }
        },
        "customer_email": {
          "description": "If provided, this value will be used when the Customer object is created. If not provided, customers will be asked to enter their email address. Use this parameter to prefill customer data if you already have an email on file. To access information about the customer once a session is complete, use the `customer` field.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "customer_update": {
          "description": "Controls what fields on Customer can be updated by the Checkout Session. Can only be provided when `customer` is provided.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "PostCheckoutSessionsBodyCustomerUpdateInput",
              "type": "named"
            }
          }
        },
        "discounts": {
          "description": "The coupon or promotion code to apply to this Session. Currently, only up to one may be specified.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "PostCheckoutSessionsBodyDiscountsInput",
                "type": "named"
              },
              "type": "array"
            }
          }
        },
        "expand": {
          "description": "Specifies which fields in the response should be expanded.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "String",
                "type": "named"
              },
              "type": "array"
            }
          }
        },
        "expires_at": {
          "description": "The Epoch time in seconds at which the Checkout Session will expire. It can be anywhere from 30 minutes to 24 hours after Checkout Session creation. By default, this value is 24 hours from creation.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "UnixTime",
              "type": "named"
            }
          }
        },
        "invoice_creation": {
          "description": "Generate a post-purchase Invoice for one-time payments.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "PostCheckoutSessionsBodyInvoiceCreationInput",
              "type": "named"
            }
          }
        },
        "line_items": {
          "description": "A list of items the customer is purchasing. Use this parameter to pass one-time or recurring [Prices](https://stripe.com/docs/api/prices).  For `payment` mode, there is a maximum of 100 line items, however it is recommended to consolidate line items if there are more than a few dozen.  For `subscription` mode, there is a maximum of 20 line items with recurring Prices and 20 line items with one-time Prices. Line items with one-time Prices will be on the initial invoice only.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "PostCheckoutSessionsBodyLineItemsInput",
                "type": "named"
              },
              "type": "array"
            }
          }
        },
        "locale": {
          "description": "The IETF language tag of the locale Checkout is displayed in. If blank or `auto`, the browser's locale is used.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "CheckoutLocale",
              "type": "named"
            }
          }
        },
        "metadata": {
          "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "JSON",
              "type": "named"
            }
          }
        },
        "mode": {
          "description": "The mode of the Checkout Session. Pass `subscription` if the Checkout Session includes at least one recurring item.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "CheckoutMode",
              "type": "named"
            }
          }
        },
        "payment_intent_data": {
          "description": "A subset of parameters to be passed to PaymentIntent creation for Checkout Sessions in `payment` mode.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "PostCheckoutSessionsBodyPaymentIntentDataInput",
              "type": "named"
            }
          }
        },
        "payment_method_collection": {
          "description": "Specify whether Checkout should collect a payment method. When set to `if_required`, Checkout will not collect a payment method when the total due for the session is 0. This may occur if the Checkout Session includes a free trial or a discount.  Can only be set in `subscription` mode. Defaults to `always`.  If you'd like information on how to collect a payment method outside of Checkout, read the guide on configuring [subscriptions with a free trial](https://stripe.com/docs/payments/checkout/free-trials).",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "CheckoutPaymentMethodCollection",
              "type": "named"
            }
          }
        },
        "payment_method_configuration": {
          "description": "The ID of the payment method configuration to use with this Checkout session.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "payment_method_options": {
          "description": "Payment-method-specific configuration.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "PostCheckoutSessionsBodyPaymentMethodOptionsInput",
              "type": "named"
            }
          }
        },
        "payment_method_types": {
          "description": "A list of the types of payment methods (e.g., `card`) this Checkout Session can accept.  You can omit this attribute to manage your payment methods from the [Stripe Dashboard](https://dashboard.stripe.com/settings/payment_methods). See [Dynamic Payment Methods](https://stripe.com/docs/payments/payment-methods/integration-options#using-dynamic-payment-methods) for more details.  Read more about the supported payment methods and their requirements in our [payment method details guide](/docs/payments/checkout/payment-methods).  If multiple payment methods are passed, Checkout will dynamically reorder them to prioritize the most relevant payment methods based on the customer's location and other characteristics.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "CheckoutPaymentMethodTypes",
                "type": "named"
              },
              "type": "array"
            }
          }
        },
        "phone_number_collection": {
          "description": "Controls phone number collection settings for the session.  We recommend that you review your privacy policy and check with your legal contacts before using this feature. Learn more about [collecting phone numbers with Checkout](https://stripe.com/docs/payments/checkout/phone-numbers).",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "PostCheckoutSessionsBodyPhoneNumberCollectionInput",
              "type": "named"
            }
          }
        },
        "redirect_on_completion": {
          "description": "This parameter applies to `ui_mode: embedded`. Learn more about the [redirect behavior](https://stripe.com/docs/payments/checkout/custom-redirect-behavior) of embedded sessions. Defaults to `always`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "CheckoutRedirectOnCompletion",
              "type": "named"
            }
          }
        },
        "return_url": {
          "description": "The URL to redirect your customer back to after they authenticate or cancel their payment on the payment method's app or site. This parameter is required if ui_mode is `embedded` and redirect-based payment methods are enabled on the session.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "setup_intent_data": {
          "description": "A subset of parameters to be passed to SetupIntent creation for Checkout Sessions in `setup` mode.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "PostCheckoutSessionsBodySetupIntentDataInput",
              "type": "named"
            }
          }
        },
        "shipping_address_collection": {
          "description": "When set, provides configuration for Checkout to collect a shipping address from a customer.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "PostCheckoutSessionsBodyShippingAddressCollectionInput",
              "type": "named"
            }
          }
        },
        "shipping_options": {
          "description": "The shipping rate options to apply to this Session. Up to a maximum of 5.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "PostCheckoutSessionsBodyShippingOptionsInput",
                "type": "named"
              },
              "type": "array"
            }
          }
        },
        "submit_type": {
          "description": "Describes the type of transaction being performed by Checkout in order to customize relevant text on the page, such as the submit button. `submit_type` can only be specified on Checkout Sessions in `payment` mode. If blank or `auto`, `pay` is used.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "CheckoutSubmitType",
              "type": "named"
            }
          }
        },
        "subscription_data": {
          "description": "A subset of parameters to be passed to subscription creation for Checkout Sessions in `subscription` mode.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "PostCheckoutSessionsBodySubscriptionDataInput",
              "type": "named"
            }
          }
        },
        "success_url": {
          "description": "The URL to which Stripe should send customers when payment or setup is complete. This parameter is not allowed if ui_mode is `embedded`. If youd like to use information from the successful Checkout Session on your page, read the guide on [customizing your success page](https://stripe.com/docs/payments/checkout/custom-success-page).",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "tax_id_collection": {
          "description": "Controls tax ID collection settings for the session.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "PostCheckoutSessionsBodyTaxIdCollectionInput",
              "type": "named"
            }
          }
        },
        "ui_mode": {
          "description": "The UI mode of the Session. Defaults to `hosted`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "CheckoutUiMode",
              "type": "named"
            }
          }
        }
      }
    },
    "PostCheckoutSessionsBodyInvoiceCreationInput": {
      "description": "Generate a post-purchase Invoice for one-time payments.",
      "fields": {
        "enabled": {
          "type": {
            "name": "Boolean",
            "type": "named"
          }
        },
        "invoice_data": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "PostCheckoutSessionsBodyInvoiceCreationInvoiceDataInput",
              "type": "named"
            }
          }
        }
      }
    },
    "PostCheckoutSessionsBodyInvoiceCreationInvoiceDataCustomFieldsInput": {
      "fields": {
        "name": {
          "type": {
            "name": "String",
            "type": "named"
          }
        },
        "value": {
          "type": {
            "name": "String",
            "type": "named"
          }
        }
      }
    },
    "PostCheckoutSessionsBodyInvoiceCreationInvoiceDataInput": {
      "fields": {
        "account_tax_ids": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "String",
                "type": "named"
              },
              "type": "array"
            }
          }
        },
        "custom_fields": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "PostCheckoutSessionsBodyInvoiceCreationInvoiceDataCustomFieldsInput",
                "type": "named"
              },
              "type": "array"
            }
          }
        },
        "description": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "footer": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "issuer": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "PostCheckoutSessionsBodyInvoiceCreationInvoiceDataIssuerInput",
              "type": "named"
            }
          }
        },
        "metadata": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "JSON",
              "type": "named"
            }
          }
        },
        "rendering_options": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "PostCheckoutSessionsBodyInvoiceCreationInvoiceDataRenderingOptionsInput",
              "type": "named"
            }
          }
        }
      }
    },
    "PostCheckoutSessionsBodyInvoiceCreationInvoiceDataIssuerInput": {
      "fields": {
        "account": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "type": {
          "type": {
            "name": "CheckoutType",
            "type": "named"
          }
        }
      }
    },
    "PostCheckoutSessionsBodyInvoiceCreationInvoiceDataRenderingOptionsInput": {
      "fields": {
        "amount_tax_display": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "CheckoutAmountTaxDisplay",
              "type": "named"
            }
          }
        }
      }
    },
    "PostCheckoutSessionsBodyLineItemsAdjustableQuantityInput": {
      "fields": {
        "enabled": {
          "type": {
            "name": "Boolean",
            "type": "named"
          }
        },
        "maximum": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          }
        },
        "minimum": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          }
        }
      }
    },
    "PostCheckoutSessionsBodyLineItemsInput": {
      "fields": {
        "adjustable_quantity": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "PostCheckoutSessionsBodyLineItemsAdjustableQuantityInput",
              "type": "named"
            }
          }
        },
        "dynamic_tax_rates": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "String",
                "type": "named"
              },
              "type": "array"
            }
          }
        },
        "price": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "price_data": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "PostCheckoutSessionsBodyLineItemsPriceDataInput",
              "type": "named"
            }
          }
        },
        "quantity": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          }
        },
        "tax_rates": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "String",
                "type": "named"
              },
              "type": "array"
            }
          }
        }
      }
    },
    "PostCheckoutSessionsBodyLineItemsPriceDataInput": {
      "fields": {
        "currency": {
          "type": {
            "name": "String",
            "type": "named"
          }
        },
        "product": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "product_data": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "PostCheckoutSessionsBodyLineItemsPriceDataProductDataInput",
              "type": "named"
            }
          }
        },
        "recurring": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "PostCheckoutSessionsBodyLineItemsPriceDataRecurringInput",
              "type": "named"
            }
          }
        },
        "tax_behavior": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "CheckoutTaxBehavior",
              "type": "named"
            }
          }
        },
        "unit_amount": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          }
        },
        "unit_amount_decimal": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        }
      }
    },
    "PostCheckoutSessionsBodyLineItemsPriceDataProductDataInput": {
      "fields": {
        "description": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "images": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "String",
                "type": "named"
              },
              "type": "array"
            }
          }
        },
        "metadata": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "JSON",
              "type": "named"
            }
          }
        },
        "name": {
          "type": {
            "name": "String",
            "type": "named"
          }
        },
        "tax_code": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        }
      }
    },
    "PostCheckoutSessionsBodyLineItemsPriceDataRecurringInput": {
      "fields": {
        "interval": {
          "type": {
            "name": "CheckoutInterval",
            "type": "named"
          }
        },
        "interval_count": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          }
        }
      }
    },
    "PostCheckoutSessionsBodyPaymentIntentDataInput": {
      "description": "A subset of parameters to be passed to PaymentIntent creation for Checkout Sessions in `payment` mode.",
      "fields": {
        "application_fee_amount": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          }
        },
        "capture_method": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "CheckoutCaptureMethod",
              "type": "named"
            }
          }
        },
        "description": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "metadata": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "JSON",
              "type": "named"
            }
          }
        },
        "on_behalf_of": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "receipt_email": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "setup_future_usage": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "CheckoutSetupFutureUsage",
              "type": "named"
            }
          }
        },
        "shipping": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "PostCheckoutSessionsBodyPaymentIntentDataShippingInput",
              "type": "named"
            }
          }
        },
        "statement_descriptor": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "statement_descriptor_suffix": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "transfer_data": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "PostCheckoutSessionsBodyPaymentIntentDataTransferDataInput",
              "type": "named"
            }
          }
        },
        "transfer_group": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        }
      }
    },
    "PostCheckoutSessionsBodyPaymentIntentDataShippingAddressInput": {
      "fields": {
        "city": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "country": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "line1": {
          "type": {
            "name": "String",
            "type": "named"
          }
        },
        "line2": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "postal_code": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "state": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        }
      }
    },
    "PostCheckoutSessionsBodyPaymentIntentDataShippingInput": {
      "fields": {
        "address": {
          "type": {
            "name": "PostCheckoutSessionsBodyPaymentIntentDataShippingAddressInput",
            "type": "named"
          }
        },
        "carrier": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "name": {
          "type": {
            "name": "String",
            "type": "named"
          }
        },
        "phone": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "tracking_number": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        }
      }
    },
    "PostCheckoutSessionsBodyPaymentIntentDataTransferDataInput": {
      "fields": {
        "amount": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          }
        },
        "destination": {
          "type": {
            "name": "String",
            "type": "named"
          }
        }
      }
    },
    "PostCheckoutSessionsBodyPaymentMethodOptionsAcssDebitInput": {
      "fields": {
        "affirm": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "PaymentMethodAffirm",
              "type": "named"
            }
          }
        },
        "currency": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "CheckoutCurrency",
              "type": "named"
            }
          }
        },
        "mandate_options": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "PostCheckoutSessionsBodyPaymentMethodOptionsAcssDebitMandateOptionsInput",
              "type": "named"
            }
          }
        },
        "setup_future_usage": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "PostCheckoutSessionsBodyPaymentMethodOptionsAcssDebitSetupFutureUsage",
              "type": "named"
            }
          }
        },
        "verification_method": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "CheckoutVerificationMethod",
              "type": "named"
            }
          }
        }
      }
    },
    "PostCheckoutSessionsBodyPaymentMethodOptionsAcssDebitMandateOptionsInput": {
      "fields": {
        "custom_mandate_url": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "default_for": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "CheckoutDefaultFor",
                "type": "named"
              },
              "type": "array"
            }
          }
        },
        "interval_description": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "payment_schedule": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "CheckoutPaymentSchedule",
              "type": "named"
            }
          }
        },
        "transaction_type": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "CheckoutTransactionType",
              "type": "named"
            }
          }
        }
      }
    },
    "PostCheckoutSessionsBodyPaymentMethodOptionsAffirmInput": {
      "fields": {
        "setup_future_usage": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "PostCheckoutSessionsBodyPaymentMethodOptionsAffirmSetupFutureUsage",
              "type": "named"
            }
          }
        }
      }
    },
    "PostCheckoutSessionsBodyPaymentMethodOptionsAfterpayClearpayInput": {
      "fields": {
        "setup_future_usage": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "PostCheckoutSessionsBodyPaymentMethodOptionsAfterpayClearpaySetupFutureUsage",
              "type": "named"
            }
          }
        }
      }
    },
    "PostCheckoutSessionsBodyPaymentMethodOptionsAlipayInput": {
      "fields": {
        "setup_future_usage": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "PostCheckoutSessionsBodyPaymentMethodOptionsAlipaySetupFutureUsage",
              "type": "named"
            }
          }
        }
      }
    },
    "PostCheckoutSessionsBodyPaymentMethodOptionsAuBecsDebitInput": {
      "fields": {
        "setup_future_usage": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "PostCheckoutSessionsBodyPaymentMethodOptionsAuBecsDebitSetupFutureUsage",
              "type": "named"
            }
          }
        }
      }
    },
    "PostCheckoutSessionsBodyPaymentMethodOptionsBacsDebitInput": {
      "fields": {
        "setup_future_usage": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "PostCheckoutSessionsBodyPaymentMethodOptionsBacsDebitSetupFutureUsage",
              "type": "named"
            }
          }
        }
      }
    },
    "PostCheckoutSessionsBodyPaymentMethodOptionsBancontactInput": {
      "fields": {
        "setup_future_usage": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "PostCheckoutSessionsBodyPaymentMethodOptionsBancontactSetupFutureUsage",
              "type": "named"
            }
          }
        }
      }
    },
    "PostCheckoutSessionsBodyPaymentMethodOptionsBoletoInput": {
      "fields": {
        "expires_after_days": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          }
        },
        "setup_future_usage": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "PostCheckoutSessionsBodyPaymentMethodOptionsBoletoSetupFutureUsage",
              "type": "named"
            }
          }
        }
      }
    },
    "PostCheckoutSessionsBodyPaymentMethodOptionsCardInput": {
      "fields": {
        "installments": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "PostCheckoutSessionsBodyPaymentMethodOptionsCardInstallmentsInput",
              "type": "named"
            }
          }
        },
        "request_three_d_secure": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "CheckoutRequestThreeDSecure",
              "type": "named"
            }
          }
        },
        "setup_future_usage": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "CheckoutSetupFutureUsage",
              "type": "named"
            }
          }
        },
        "statement_descriptor_suffix_kana": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "statement_descriptor_suffix_kanji": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        }
      }
    },
    "PostCheckoutSessionsBodyPaymentMethodOptionsCardInstallmentsInput": {
      "fields": {
        "enabled": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          }
        }
      }
    },
    "PostCheckoutSessionsBodyPaymentMethodOptionsCashappInput": {
      "fields": {
        "setup_future_usage": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "PostCheckoutSessionsBodyPaymentMethodOptionsCashappSetupFutureUsage",
              "type": "named"
            }
          }
        }
      }
    },
    "PostCheckoutSessionsBodyPaymentMethodOptionsCustomerBalanceBankTransferEuBankTransferInput": {
      "fields": {
        "country": {
          "type": {
            "name": "String",
            "type": "named"
          }
        }
      }
    },
    "PostCheckoutSessionsBodyPaymentMethodOptionsCustomerBalanceBankTransferInput": {
      "fields": {
        "eu_bank_transfer": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "PostCheckoutSessionsBodyPaymentMethodOptionsCustomerBalanceBankTransferEuBankTransferInput",
              "type": "named"
            }
          }
        },
        "requested_address_types": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "CheckoutRequestedAddressTypes",
                "type": "named"
              },
              "type": "array"
            }
          }
        },
        "type": {
          "type": {
            "name": "PostCheckoutSessionsBodyPaymentMethodOptionsCustomerBalanceBankTransferType",
            "type": "named"
          }
        }
      }
    },
    "PostCheckoutSessionsBodyPaymentMethodOptionsCustomerBalanceInput": {
      "fields": {
        "bank_transfer": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "PostCheckoutSessionsBodyPaymentMethodOptionsCustomerBalanceBankTransferInput",
              "type": "named"
            }
          }
        },
        "funding_type": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "CheckoutFundingType",
              "type": "named"
            }
          }
        },
        "setup_future_usage": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "PostCheckoutSessionsBodyPaymentMethodOptionsCustomerBalanceSetupFutureUsage",
              "type": "named"
            }
          }
        }
      }
    },
    "PostCheckoutSessionsBodyPaymentMethodOptionsEpsInput": {
      "fields": {
        "setup_future_usage": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "PostCheckoutSessionsBodyPaymentMethodOptionsEpsSetupFutureUsage",
              "type": "named"
            }
          }
        }
      }
    },
    "PostCheckoutSessionsBodyPaymentMethodOptionsFpxInput": {
      "fields": {
        "setup_future_usage": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "PostCheckoutSessionsBodyPaymentMethodOptionsFpxSetupFutureUsage",
              "type": "named"
            }
          }
        }
      }
    },
    "PostCheckoutSessionsBodyPaymentMethodOptionsGiropayInput": {
      "fields": {
        "setup_future_usage": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "PostCheckoutSessionsBodyPaymentMethodOptionsGiropaySetupFutureUsage",
              "type": "named"
            }
          }
        }
      }
    },
    "PostCheckoutSessionsBodyPaymentMethodOptionsGrabpayInput": {
      "fields": {
        "setup_future_usage": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "PostCheckoutSessionsBodyPaymentMethodOptionsGrabpaySetupFutureUsage",
              "type": "named"
            }
          }
        }
      }
    },
    "PostCheckoutSessionsBodyPaymentMethodOptionsIdealInput": {
      "fields": {
        "setup_future_usage": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "PostCheckoutSessionsBodyPaymentMethodOptionsIdealSetupFutureUsage",
              "type": "named"
            }
          }
        }
      }
    },
    "PostCheckoutSessionsBodyPaymentMethodOptionsInput": {
      "description": "Payment-method-specific configuration.",
      "fields": {
        "acss_debit": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "PostCheckoutSessionsBodyPaymentMethodOptionsAcssDebitInput",
              "type": "named"
            }
          }
        },
        "affirm": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "PostCheckoutSessionsBodyPaymentMethodOptionsAffirmInput",
              "type": "named"
            }
          }
        },
        "afterpay_clearpay": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "PostCheckoutSessionsBodyPaymentMethodOptionsAfterpayClearpayInput",
              "type": "named"
            }
          }
        },
        "alipay": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "PostCheckoutSessionsBodyPaymentMethodOptionsAlipayInput",
              "type": "named"
            }
          }
        },
        "au_becs_debit": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "PostCheckoutSessionsBodyPaymentMethodOptionsAuBecsDebitInput",
              "type": "named"
            }
          }
        },
        "bacs_debit": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "PostCheckoutSessionsBodyPaymentMethodOptionsBacsDebitInput",
              "type": "named"
            }
          }
        },
        "bancontact": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "PostCheckoutSessionsBodyPaymentMethodOptionsBancontactInput",
              "type": "named"
            }
          }
        },
        "boleto": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "PostCheckoutSessionsBodyPaymentMethodOptionsBoletoInput",
              "type": "named"
            }
          }
        },
        "card": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "PostCheckoutSessionsBodyPaymentMethodOptionsCardInput",
              "type": "named"
            }
          }
        },
        "cashapp": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "PostCheckoutSessionsBodyPaymentMethodOptionsCashappInput",
              "type": "named"
            }
          }
        },
        "customer_balance": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "PostCheckoutSessionsBodyPaymentMethodOptionsCustomerBalanceInput",
              "type": "named"
            }
          }
        },
        "eps": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "PostCheckoutSessionsBodyPaymentMethodOptionsEpsInput",
              "type": "named"
            }
          }
        },
        "fpx": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "PostCheckoutSessionsBodyPaymentMethodOptionsFpxInput",
              "type": "named"
            }
          }
        },
        "giropay": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "PostCheckoutSessionsBodyPaymentMethodOptionsGiropayInput",
              "type": "named"
            }
          }
        },
        "grabpay": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "PostCheckoutSessionsBodyPaymentMethodOptionsGrabpayInput",
              "type": "named"
            }
          }
        },
        "ideal": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "PostCheckoutSessionsBodyPaymentMethodOptionsIdealInput",
              "type": "named"
            }
          }
        },
        "klarna": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "PostCheckoutSessionsBodyPaymentMethodOptionsKlarnaInput",
              "type": "named"
            }
          }
        },
        "konbini": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "PostCheckoutSessionsBodyPaymentMethodOptionsKonbiniInput",
              "type": "named"
            }
          }
        },
        "link": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "PostCheckoutSessionsBodyPaymentMethodOptionsLinkInput",
              "type": "named"
            }
          }
        },
        "oxxo": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "PostCheckoutSessionsBodyPaymentMethodOptionsOxxoInput",
              "type": "named"
            }
          }
        },
        "p24": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "PostCheckoutSessionsBodyPaymentMethodOptionsP24Input",
              "type": "named"
            }
          }
        },
        "paynow": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "PostCheckoutSessionsBodyPaymentMethodOptionsPaynowInput",
              "type": "named"
            }
          }
        },
        "paypal": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "PostCheckoutSessionsBodyPaymentMethodOptionsPaypalInput",
              "type": "named"
            }
          }
        },
        "pix": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "PostCheckoutSessionsBodyPaymentMethodOptionsPixInput",
              "type": "named"
            }
          }
        },
        "revolut_pay": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "PostCheckoutSessionsBodyPaymentMethodOptionsRevolutPayInput",
              "type": "named"
            }
          }
        },
        "sepa_debit": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "PostCheckoutSessionsBodyPaymentMethodOptionsSepaDebitInput",
              "type": "named"
            }
          }
        },
        "sofort": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "PostCheckoutSessionsBodyPaymentMethodOptionsSofortInput",
              "type": "named"
            }
          }
        },
        "swish": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "PostCheckoutSessionsBodyPaymentMethodOptionsSwishInput",
              "type": "named"
            }
          }
        },
        "us_bank_account": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "PostCheckoutSessionsBodyPaymentMethodOptionsUsBankAccountInput",
              "type": "named"
            }
          }
        },
        "wechat_pay": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "PostCheckoutSessionsBodyPaymentMethodOptionsWechatPayInput",
              "type": "named"
            }
          }
        }
      }
    },
    "PostCheckoutSessionsBodyPaymentMethodOptionsKlarnaInput": {
      "fields": {
        "setup_future_usage": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "PostCheckoutSessionsBodyPaymentMethodOptionsKlarnaSetupFutureUsage",
              "type": "named"
            }
          }
        }
      }
    },
    "PostCheckoutSessionsBodyPaymentMethodOptionsKonbiniInput": {
      "fields": {
        "expires_after_days": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          }
        },
        "setup_future_usage": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "PostCheckoutSessionsBodyPaymentMethodOptionsKonbiniSetupFutureUsage",
              "type": "named"
            }
          }
        }
      }
    },
    "PostCheckoutSessionsBodyPaymentMethodOptionsLinkInput": {
      "fields": {
        "setup_future_usage": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "PostCheckoutSessionsBodyPaymentMethodOptionsLinkSetupFutureUsage",
              "type": "named"
            }
          }
        }
      }
    },
    "PostCheckoutSessionsBodyPaymentMethodOptionsOxxoInput": {
      "fields": {
        "expires_after_days": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          }
        },
        "setup_future_usage": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "PostCheckoutSessionsBodyPaymentMethodOptionsOxxoSetupFutureUsage",
              "type": "named"
            }
          }
        }
      }
    },
    "PostCheckoutSessionsBodyPaymentMethodOptionsP24Input": {
      "fields": {
        "setup_future_usage": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "PostCheckoutSessionsBodyPaymentMethodOptionsP24SetupFutureUsage",
              "type": "named"
            }
          }
        },
        "tos_shown_and_accepted": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          }
        }
      }
    },
    "PostCheckoutSessionsBodyPaymentMethodOptionsPaynowInput": {
      "fields": {
        "setup_future_usage": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "PostCheckoutSessionsBodyPaymentMethodOptionsPaynowSetupFutureUsage",
              "type": "named"
            }
          }
        }
      }
    },
    "PostCheckoutSessionsBodyPaymentMethodOptionsPaypalInput": {
      "fields": {
        "capture_method": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "PostCheckoutSessionsBodyPaymentMethodOptionsPaypalCaptureMethod",
              "type": "named"
            }
          }
        },
        "preferred_locale": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "CheckoutPreferredLocale",
              "type": "named"
            }
          }
        },
        "reference": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "risk_correlation_id": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "setup_future_usage": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "PostCheckoutSessionsBodyPaymentMethodOptionsPaypalSetupFutureUsage",
              "type": "named"
            }
          }
        }
      }
    },
    "PostCheckoutSessionsBodyPaymentMethodOptionsPixInput": {
      "fields": {
        "expires_after_seconds": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          }
        }
      }
    },
    "PostCheckoutSessionsBodyPaymentMethodOptionsRevolutPayInput": {
      "fields": {
        "setup_future_usage": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "PostCheckoutSessionsBodyPaymentMethodOptionsRevolutPaySetupFutureUsage",
              "type": "named"
            }
          }
        }
      }
    },
    "PostCheckoutSessionsBodyPaymentMethodOptionsSepaDebitInput": {
      "fields": {
        "setup_future_usage": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "PostCheckoutSessionsBodyPaymentMethodOptionsSepaDebitSetupFutureUsage",
              "type": "named"
            }
          }
        }
      }
    },
    "PostCheckoutSessionsBodyPaymentMethodOptionsSofortInput": {
      "fields": {
        "setup_future_usage": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "PostCheckoutSessionsBodyPaymentMethodOptionsSofortSetupFutureUsage",
              "type": "named"
            }
          }
        }
      }
    },
    "PostCheckoutSessionsBodyPaymentMethodOptionsSwishInput": {
      "fields": {
        "reference": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        }
      }
    },
    "PostCheckoutSessionsBodyPaymentMethodOptionsUsBankAccountFinancialConnectionsInput": {
      "fields": {
        "permissions": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "CheckoutPermissions",
                "type": "named"
              },
              "type": "array"
            }
          }
        },
        "prefetch": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "CheckoutPrefetch",
                "type": "named"
              },
              "type": "array"
            }
          }
        }
      }
    },
    "PostCheckoutSessionsBodyPaymentMethodOptionsUsBankAccountInput": {
      "fields": {
        "financial_connections": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "PostCheckoutSessionsBodyPaymentMethodOptionsUsBankAccountFinancialConnectionsInput",
              "type": "named"
            }
          }
        },
        "setup_future_usage": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "PostCheckoutSessionsBodyPaymentMethodOptionsUsBankAccountSetupFutureUsage",
              "type": "named"
            }
          }
        },
        "verification_method": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "PostCheckoutSessionsBodyPaymentMethodOptionsUsBankAccountVerificationMethod",
              "type": "named"
            }
          }
        }
      }
    },
    "PostCheckoutSessionsBodyPaymentMethodOptionsWechatPayInput": {
      "fields": {
        "app_id": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "client": {
          "type": {
            "name": "CheckoutClient",
            "type": "named"
          }
        },
        "setup_future_usage": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "PostCheckoutSessionsBodyPaymentMethodOptionsWechatPaySetupFutureUsage",
              "type": "named"
            }
          }
        }
      }
    },
    "PostCheckoutSessionsBodyPhoneNumberCollectionInput": {
      "description": "Controls phone number collection settings for the session.  We recommend that you review your privacy policy and check with your legal contacts before using this feature. Learn more about [collecting phone numbers with Checkout](https://stripe.com/docs/payments/checkout/phone-numbers).",
      "fields": {
        "enabled": {
          "type": {
            "name": "Boolean",
            "type": "named"
          }
        }
      }
    },
    "PostCheckoutSessionsBodySetupIntentDataInput": {
      "description": "A subset of parameters to be passed to SetupIntent creation for Checkout Sessions in `setup` mode.",
      "fields": {
        "description": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "metadata": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "JSON",
              "type": "named"
            }
          }
        },
        "on_behalf_of": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        }
      }
    },
    "PostCheckoutSessionsBodyShippingAddressCollectionInput": {
      "description": "When set, provides configuration for Checkout to collect a shipping address from a customer.",
      "fields": {
        "allowed_countries": {
          "type": {
            "element_type": {
              "name": "CheckoutAllowedCountries",
              "type": "named"
            },
            "type": "array"
          }
        }
      }
    },
    "PostCheckoutSessionsBodyShippingOptionsInput": {
      "fields": {
        "shipping_rate": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "shipping_rate_data": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "PostCheckoutSessionsBodyShippingOptionsShippingRateDataInput",
              "type": "named"
            }
          }
        }
      }
    },
    "PostCheckoutSessionsBodyShippingOptionsShippingRateDataDeliveryEstimateInput": {
      "fields": {
        "maximum": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "PostCheckoutSessionsBodyShippingOptionsShippingRateDataDeliveryEstimateMaximumInput",
              "type": "named"
            }
          }
        },
        "minimum": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "PostCheckoutSessionsBodyShippingOptionsShippingRateDataDeliveryEstimateMinimumInput",
              "type": "named"
            }
          }
        }
      }
    },
    "PostCheckoutSessionsBodyShippingOptionsShippingRateDataDeliveryEstimateMaximumInput": {
      "fields": {
        "unit": {
          "type": {
            "name": "CheckoutUnit",
            "type": "named"
          }
        },
        "value": {
          "type": {
            "name": "Int32",
            "type": "named"
          }
        }
      }
    },
    "PostCheckoutSessionsBodyShippingOptionsShippingRateDataDeliveryEstimateMinimumInput": {
      "fields": {
        "unit": {
          "type": {
            "name": "CheckoutUnit",
            "type": "named"
          }
        },
        "value": {
          "type": {
            "name": "Int32",
            "type": "named"
          }
        }
      }
    },
    "PostCheckoutSessionsBodyShippingOptionsShippingRateDataFixedAmountInput": {
      "fields": {
        "amount": {
          "type": {
            "name": "Int32",
            "type": "named"
          }
        },
        "currency": {
          "type": {
            "name": "String",
            "type": "named"
          }
        },
        "currency_options": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "JSON",
              "type": "named"
            }
          }
        }
      }
    },
    "PostCheckoutSessionsBodyShippingOptionsShippingRateDataInput": {
      "fields": {
        "delivery_estimate": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "PostCheckoutSessionsBodyShippingOptionsShippingRateDataDeliveryEstimateInput",
              "type": "named"
            }
          }
        },
        "display_name": {
          "type": {
            "name": "String",
            "type": "named"
          }
        },
        "fixed_amount": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "PostCheckoutSessionsBodyShippingOptionsShippingRateDataFixedAmountInput",
              "type": "named"
            }
          }
        },
        "metadata": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "JSON",
              "type": "named"
            }
          }
        },
        "tax_behavior": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "CheckoutTaxBehavior",
              "type": "named"
            }
          }
        },
        "tax_code": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "type": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "PostCheckoutSessionsBodyShippingOptionsShippingRateDataType",
              "type": "named"
            }
          }
        }
      }
    },
    "PostCheckoutSessionsBodySubscriptionDataInput": {
      "description": "A subset of parameters to be passed to subscription creation for Checkout Sessions in `subscription` mode.",
      "fields": {
        "application_fee_percent": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Float64",
              "type": "named"
            }
          }
        },
        "billing_cycle_anchor": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "UnixTime",
              "type": "named"
            }
          }
        },
        "default_tax_rates": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "String",
                "type": "named"
              },
              "type": "array"
            }
          }
        },
        "description": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "invoice_settings": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "PostCheckoutSessionsBodySubscriptionDataInvoiceSettingsInput",
              "type": "named"
            }
          }
        },
        "metadata": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "JSON",
              "type": "named"
            }
          }
        },
        "on_behalf_of": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "proration_behavior": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "CheckoutProrationBehavior",
              "type": "named"
            }
          }
        },
        "transfer_data": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "PostCheckoutSessionsBodySubscriptionDataTransferDataInput",
              "type": "named"
            }
          }
        },
        "trial_end": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "UnixTime",
              "type": "named"
            }
          }
        },
        "trial_period_days": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          }
        },
        "trial_settings": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "PostCheckoutSessionsBodySubscriptionDataTrialSettingsInput",
              "type": "named"
            }
          }
        }
      }
    },
    "PostCheckoutSessionsBodySubscriptionDataInvoiceSettingsInput": {
      "fields": {
        "issuer": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "PostCheckoutSessionsBodySubscriptionDataInvoiceSettingsIssuerInput",
              "type": "named"
            }
          }
        }
      }
    },
    "PostCheckoutSessionsBodySubscriptionDataInvoiceSettingsIssuerInput": {
      "fields": {
        "account": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "type": {
          "type": {
            "name": "CheckoutType",
            "type": "named"
          }
        }
      }
    },
    "PostCheckoutSessionsBodySubscriptionDataTransferDataInput": {
      "fields": {
        "amount_percent": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Float64",
              "type": "named"
            }
          }
        },
        "destination": {
          "type": {
            "name": "String",
            "type": "named"
          }
        }
      }
    },
    "PostCheckoutSessionsBodySubscriptionDataTrialSettingsEndBehaviorInput": {
      "fields": {
        "missing_payment_method": {
          "type": {
            "name": "CheckoutMissingPaymentMethod",
            "type": "named"
          }
        }
      }
    },
    "PostCheckoutSessionsBodySubscriptionDataTrialSettingsInput": {
      "fields": {
        "end_behavior": {
          "type": {
            "name": "PostCheckoutSessionsBodySubscriptionDataTrialSettingsEndBehaviorInput",
            "type": "named"
          }
        }
      }
    },
    "PostCheckoutSessionsBodyTaxIdCollectionInput": {
      "description": "Controls tax ID collection settings for the session.",
      "fields": {
        "enabled": {
          "type": {
            "name": "Boolean",
            "type": "named"
          }
        }
      }
    },
    "PostFilesBodyFileLinkDataInput": {
      "description": "Optional parameters that automatically create a [file link](https://stripe.com/docs/api#file_links) for the newly created file.",
      "fields": {
        "create": {
          "type": {
            "name": "Boolean",
            "type": "named"
          }
        },
        "expires_at": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "UnixTime",
              "type": "named"
            }
          }
        },
        "metadata": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "JSON",
              "type": "named"
            }
          }
        }
      }
    },
    "PostFilesBodyInput": {
      "fields": {
        "expand": {
          "description": "Specifies which fields in the response should be expanded.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "String",
                "type": "named"
              },
              "type": "array"
            }
          }
        },
        "expand_json": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "String",
                "type": "named"
              },
              "type": "array"
            }
          }
        },
        "file": {
          "description": "A file to upload. Make sure that the specifications follow RFC 2388, which defines file transfers for the `multipart/form-data` protocol.",
          "type": {
            "name": "Binary",
            "type": "named"
          }
        },
        "file_link_data": {
          "description": "Optional parameters that automatically create a [file link](https://stripe.com/docs/api#file_links) for the newly created file.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "PostFilesBodyFileLinkDataInput",
              "type": "named"
            }
          }
        },
        "purpose": {
          "description": "The [purpose](https://stripe.com/docs/file-upload#uploading-a-file) of the uploaded file.",
          "type": {
            "name": "FilesPurpose",
            "type": "named"
          }
        }
      }
    },
    "PostTestHelpersTreasuryInboundTransfersIdFailBodyFailureDetailsInput": {
      "description": "Details about a failed InboundTransfer.",
      "fields": {
        "code": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TestHelpersCode",
              "type": "named"
            }
          }
        }
      }
    },
    "PostTestHelpersTreasuryInboundTransfersIdFailBodyInput": {
      "fields": {
        "expand": {
          "description": "Specifies which fields in the response should be expanded.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "String",
                "type": "named"
              },
              "type": "array"
            }
          }
        },
        "failure_details": {
          "description": "Details about a failed InboundTransfer.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "PostTestHelpersTreasuryInboundTransfersIdFailBodyFailureDetailsInput",
              "type": "named"
            }
          }
        }
      }
    },
    "PutCommentXmlBodyCommentInput": {
      "fields": {
        "bsrequest": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          }
        },
        "id": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          }
        },
        "package": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "parent": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          }
        },
        "project": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "when": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "who": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "xmlValue": {
          "description": "Value of the xml field",
          "type": {
            "name": "String",
            "type": "named"
          }
        }
      }
    },
    "PutCommentXmlBodyInput": {
      "fields": {
        "comment": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "PutCommentXmlBodyCommentInput",
                "type": "named"
              },
              "type": "array"
            }
          }
        },
        "comment_count": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          }
        },
        "package": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "project": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "request": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          }
        },
        "user": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        }
      }
    },
    "PutCommentXmlResult": {
      "fields": {
        "comment": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "PutCommentXmlResultComment",
                "type": "named"
              },
              "type": "array"
            }
          }
        },
        "comment_count": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          }
        },
        "package": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "project": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "request": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          }
        },
        "user": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        }
      }
    },
    "PutCommentXmlResultComment": {
      "fields": {
        "bsrequest": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          }
        },
        "id": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          }
        },
        "package": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "parent": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          }
        },
        "project": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "when": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "who": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "xmlValue": {
          "description": "Value of the xml field",
          "type": {
            "name": "String",
            "type": "named"
          }
        }
      }
    },
    "SnakeObject": {
      "fields": {
        "features": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "JSON",
              "type": "named"
            }
          }
        },
        "id": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "SnakeObjectId",
              "type": "named"
            }
          }
        }
      }
    },
    "SnakeObjectId": {
      "fields": {
        "complete": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          }
        },
        "id": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int64",
              "type": "named"
            }
          }
        },
        "petId": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int64",
              "type": "named"
            }
          }
        },
        "quantity": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          }
        },
        "shipDate": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          }
        },
        "status": {
          "description": "Order Status",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "SnakeObjectIdStatus",
              "type": "named"
            }
          }
        }
      }
    },
    "Tag": {
      "fields": {
        "id": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int64",
              "type": "named"
            }
          }
        },
        "name": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        }
      }
    },
    "TagInput": {
      "fields": {
        "id": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int64",
              "type": "named"
            }
          }
        },
        "name": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        }
      }
    },
    "TreasuryInboundTransfer": {
      "description": "Use [InboundTransfers](https://stripe.com/docs/treasury/moving-money/financial-accounts/into/inbound-transfers) to add funds to your [FinancialAccount](https://stripe.com/docs/api#financial_accounts) via a PaymentMethod that is owned by you. The funds will be transferred via an ACH debit.",
      "fields": {
        "amount": {
          "description": "Amount (in cents) transferred.",
          "type": {
            "name": "Int32",
            "type": "named"
          }
        },
        "cancelable": {
          "description": "Returns `true` if the InboundTransfer is able to be canceled.",
          "type": {
            "name": "Boolean",
            "type": "named"
          }
        },
        "context": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "JSON",
              "type": "named"
            }
          }
        },
        "created": {
          "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
          "type": {
            "name": "UnixTime",
            "type": "named"
          }
        },
        "currency": {
          "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
          "type": {
            "name": "String",
            "type": "named"
          }
        },
        "description": {
          "description": "An arbitrary string attached to the object. Often useful for displaying to users.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "failure_details": {
          "description": "Details about this InboundTransfer's failure. Only set when status is `failed`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TreasuryInboundTransfersResourceFailureDetails",
              "type": "named"
            }
          }
        },
        "financial_account": {
          "description": "The FinancialAccount that received the funds.",
          "type": {
            "name": "String",
            "type": "named"
          }
        },
        "hosted_regulatory_receipt_url": {
          "description": "A [hosted transaction receipt](https://stripe.com/docs/treasury/moving-money/regulatory-receipts) URL that is provided when money movement is considered regulated under Stripe's money transmission licenses.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "id": {
          "description": "Unique identifier for the object.",
          "type": {
            "name": "String",
            "type": "named"
          }
        },
        "livemode": {
          "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
          "type": {
            "name": "Boolean",
            "type": "named"
          }
        },
        "metadata": {
          "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
          "type": {
            "name": "JSON",
            "type": "named"
          }
        },
        "object": {
          "description": "String representing the object's type. Objects of the same type share the same value.",
          "type": {
            "name": "TreasuryInboundTransferObject",
            "type": "named"
          }
        },
        "origin_payment_method": {
          "description": "The origin payment method to be debited for an InboundTransfer.",
          "type": {
            "name": "String",
            "type": "named"
          }
        },
        "returned": {
          "description": "Returns `true` if the funds for an InboundTransfer were returned after the InboundTransfer went to the `succeeded` state.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          }
        },
        "statement_descriptor": {
          "description": "Statement descriptor shown when funds are debited from the source. Not all payment networks support `statement_descriptor`.",
          "type": {
            "name": "String",
            "type": "named"
          }
        },
        "status": {
          "description": "Status of the InboundTransfer: `processing`, `succeeded`, `failed`, and `canceled`. An InboundTransfer is `processing` if it is created and pending. The status changes to `succeeded` once the funds have been \"confirmed\" and a `transaction` is created and posted. The status changes to `failed` if the transfer fails.",
          "type": {
            "name": "TreasuryInboundTransferStatus",
            "type": "named"
          }
        },
        "status_transitions": {
          "type": {
            "name": "TreasuryInboundTransfersResourceInboundTransferResourceStatusTransitions",
            "type": "named"
          }
        },
        "transaction": {
          "description": "The Transaction associated with this object.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "JSON",
              "type": "named"
            }
          }
        }
      }
    },
    "TreasuryInboundTransfersResourceFailureDetails": {
      "fields": {
        "code": {
          "description": "Reason for the failure.",
          "type": {
            "name": "TreasuryInboundTransfersResourceFailureDetailsCode",
            "type": "named"
          }
        }
      }
    },
    "TreasuryInboundTransfersResourceInboundTransferResourceStatusTransitions": {
      "fields": {
        "canceled_at": {
          "description": "Timestamp describing when an InboundTransfer changed status to `canceled`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "UnixTime",
              "type": "named"
            }
          }
        },
        "failed_at": {
          "description": "Timestamp describing when an InboundTransfer changed status to `failed`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "UnixTime",
              "type": "named"
            }
          }
        },
        "succeeded_at": {
          "description": "Timestamp describing when an InboundTransfer changed status to `succeeded`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "UnixTime",
              "type": "named"
            }
          }
        }
      }
    },
    "UploadPetMultipartBodyInput": {
      "fields": {
        "address": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "JSON",
              "type": "named"
            }
          }
        },
        "addresses": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "AddressInput",
                "type": "named"
              },
              "type": "array"
            }
          }
        },
        "children": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "String",
                "type": "named"
              },
              "type": "array"
            }
          }
        },
        "id": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "UUID",
              "type": "named"
            }
          }
        },
        "profileImage": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Binary",
              "type": "named"
            }
          }
        }
      }
    },
    "User": {
      "fields": {
        "email": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "firstName": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "id": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int64",
              "type": "named"
            }
          }
        },
        "lastName": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "password": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "phone": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "userStatus": {
          "description": "User Status",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          }
        },
        "username": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        }
      }
    },
    "UserInput": {
      "fields": {
        "email": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "firstName": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "id": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int64",
              "type": "named"
            }
          }
        },
        "lastName": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "password": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "phone": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "userStatus": {
          "description": "User Status",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          }
        },
        "username": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        }
      }
    }
  },
  "procedures": [
    {
      "arguments": {
        "account": {
          "type": {
            "name": "String",
            "type": "named"
          }
        },
        "body": {
          "description": "Request body of DELETE /v1/accounts/{account}",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "JSON",
              "type": "named"
            }
          }
        }
      },
      "description": "DELETE /v1/accounts/{account}",
      "name": "DeleteAccountsAccount",
      "result_type": {
        "name": "TreasuryInboundTransfer",
        "type": "named"
      }
    },
    {
      "arguments": {
        "body": {
          "description": "Request body of POST /v1/billing/meter_events",
          "type": {
            "name": "PostBillingMeterEventsBodyInput",
            "type": "named"
          }
        }
      },
      "description": "Create a billing meter event",
      "name": "PostBillingMeterEvents",
      "result_type": {
        "name": "BillingMeterEvent",
        "type": "named"
      }
    },
    {
      "arguments": {
        "body": {
          "description": "Request body of POST /v1/checkout/sessions",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "PostCheckoutSessionsBodyInput",
              "type": "named"
            }
          }
        }
      },
      "description": "Creates a Session object.",
      "name": "PostCheckoutSessions",
      "result_type": {
        "name": "Order",
        "type": "named"
      }
    },
    {
      "arguments": {
        "body": {
          "description": "Request body of POST /v1/files",
          "type": {
            "name": "PostFilesBodyInput",
            "type": "named"
          }
        },
        "headerXRateLimitLimit": {
          "type": {
            "name": "Int32",
            "type": "named"
          }
        }
      },
      "description": "POST /v1/files",
      "name": "PostFiles",
      "result_type": {
        "name": "ApiResponse",
        "type": "named"
      }
    },
    {
      "arguments": {
        "body": {
          "description": "Request body of POST /test_helpers/treasury/inbound_transfers/{id}/fail",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "PostTestHelpersTreasuryInboundTransfersIdFailBodyInput",
              "type": "named"
            }
          }
        },
        "id": {
          "type": {
            "name": "String",
            "type": "named"
          }
        }
      },
      "description": "Transitions a test mode created InboundTransfer to the failed status. The InboundTransfer must already be in the processing state.",
      "name": "PostTestHelpersTreasuryInboundTransfersIdFail",
      "result_type": {
        "name": "TreasuryInboundTransfer",
        "type": "named"
      }
    },
    {
      "arguments": {
        "body": {
          "description": "Request body of POST /pet",
          "type": {
            "name": "PetInput",
            "type": "named"
          }
        }
      },
      "description": "Add a new pet to the store",
      "name": "addPet",
      "result_type": {
        "name": "Pet",
        "type": "named"
      }
    },
    {
      "arguments": {},
      "description": "Add snake object",
      "name": "addSnake",
      "result_type": {
        "name": "SnakeObject",
        "type": "named"
      }
    },
    {
      "arguments": {
        "body": {
          "description": "Request body of POST /fine_tuning/jobs",
          "type": {
            "name": "CreateFineTuningJobRequestInput",
            "type": "named"
          }
        }
      },
      "description": "POST /fine_tuning/jobs",
      "name": "createFineTuningJob",
      "result_type": {
        "name": "CreateFineTuningJobRequest",
        "type": "named"
      }
    },
    {
      "arguments": {
        "body": {
          "description": "Request body of POST /user/createWithList",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "UserInput",
                "type": "named"
              },
              "type": "array"
            }
          }
        }
      },
      "description": "Creates list of users with given input array",
      "name": "createUsersWithListInput",
      "result_type": {
        "name": "User",
        "type": "named"
      }
    },
    {
      "arguments": {
        "orderId": {
          "description": "ID of the order that needs to be deleted",
          "type": {
            "name": "Int64",
            "type": "named"
          }
        }
      },
      "description": "Delete purchase order by ID",
      "name": "deleteOrder",
      "result_type": {
        "type": "nullable",
        "underlying_type": {
          "name": "JSON",
          "type": "named"
        }
      }
    },
    {
      "arguments": {
        "api_key": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "petId": {
          "description": "Pet id to delete",
          "type": {
            "name": "Int64",
            "type": "named"
          }
        }
      },
      "description": "Deletes a pet",
      "name": "deletePet",
      "result_type": {
        "type": "nullable",
        "underlying_type": {
          "name": "JSON",
          "type": "named"
        }
      }
    },
    {
      "arguments": {
        "username": {
          "description": "The name that needs to be deleted",
          "type": {
            "name": "String",
            "type": "named"
          }
        }
      },
      "description": "Delete user",
      "name": "deleteUser",
      "result_type": {
        "type": "nullable",
        "underlying_type": {
          "name": "JSON",
          "type": "named"
        }
      }
    },
    {
      "arguments": {
        "body": {
          "description": "Request body of POST /store/order",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "OrderInput",
              "type": "named"
            }
          }
        }
      },
      "description": "Place an order for a pet",
      "name": "placeOrder",
      "result_type": {
        "name": "Order",
        "type": "named"
      }
    },
    {
      "arguments": {
        "body": {
          "description": "Request body of PUT /book/xml",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "BookInput",
              "type": "named"
            }
          }
        }
      },
      "description": "PUT /book/xml",
      "name": "putBookXml",
      "result_type": {
        "name": "Book",
        "type": "named"
      }
    },
    {
      "arguments": {
        "body": {
          "description": "Request body of PUT /comment/xml",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "PutCommentXmlBodyInput",
              "type": "named"
            }
          }
        }
      },
      "description": "PUT /comment/xml",
      "name": "putCommentXml",
      "result_type": {
        "name": "PutCommentXmlResult",
        "type": "named"
      }
    },
    {
      "arguments": {
        "body": {
          "description": "Request body of PUT /pet/xml",
          "type": {
            "name": "PetInput",
            "type": "named"
          }
        }
      },
      "description": "Update an existing pet",
      "name": "putPetXml",
      "result_type": {
        "name": "Pet",
        "type": "named"
      }
    },
    {
      "arguments": {
        "body": {
          "description": "Request body of PUT /pet",
          "type": {
            "name": "PetInput",
            "type": "named"
          }
        }
      },
      "description": "Update an existing pet",
      "name": "updatePet",
      "result_type": {
        "name": "Pet",
        "type": "named"
      }
    },
    {
      "arguments": {
        "name": {
          "description": "Name of pet that needs to be updated",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "petId": {
          "description": "ID of pet that needs to be updated",
          "type": {
            "name": "Int64",
            "type": "named"
          }
        },
        "status": {
          "description": "Status of pet that needs to be updated",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        }
      },
      "description": "Updates a pet in the store with form data",
      "name": "updatePetWithForm",
      "result_type": {
        "type": "nullable",
        "underlying_type": {
          "name": "JSON",
          "type": "named"
        }
      }
    },
    {
      "arguments": {
        "additionalMetadata": {
          "description": "Additional Metadata",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "body": {
          "description": "Request body of POST /pet/{petId}/uploadImage",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Binary",
              "type": "named"
            }
          }
        },
        "petId": {
          "description": "ID of pet to update",
          "type": {
            "name": "Int64",
            "type": "named"
          }
        }
      },
      "description": "uploads an image",
      "name": "uploadFile",
      "result_type": {
        "name": "ApiResponse",
        "type": "named"
      }
    },
    {
      "arguments": {
        "body": {
          "description": "Request body of POST /pet/multipart",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "UploadPetMultipartBodyInput",
              "type": "named"
            }
          }
        },
        "headerXRateLimitLimit": {
          "description": "The number of allowed requests in the current period",
          "type": {
            "name": "Int32",
            "type": "named"
          }
        }
      },
      "description": "POST /pet/multipart",
      "name": "uploadPetMultipart",
      "result_type": {
        "name": "ApiResponse",
        "type": "named"
      }
    }
  ],
  "scalar_types": {
    "BillingMeterEventObject": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "billing.meter_event"
        ],
        "type": "enum"
      }
    },
    "Binary": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "type": "bytes"
      }
    },
    "Boolean": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "type": "boolean"
      }
    },
    "CheckoutAddress": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "auto",
          "never"
        ],
        "type": "enum"
      }
    },
    "CheckoutAllowedCountries": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "AC",
          "AD"
        ],
        "type": "enum"
      }
    },
    "CheckoutAmountTaxDisplay": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "",
          "exclude_tax",
          "include_inclusive_tax"
        ],
        "type": "enum"
      }
    },
    "CheckoutBillingAddressCollection": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "auto",
          "required"
        ],
        "type": "enum"
      }
    },
    "CheckoutCaptureMethod": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "automatic",
          "automatic_async",
          "manual"
        ],
        "type": "enum"
      }
    },
    "CheckoutClient": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "android",
          "ios",
          "web"
        ],
        "type": "enum"
      }
    },
    "CheckoutCurrency": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "cad",
          "usd"
        ],
        "type": "enum"
      }
    },
    "CheckoutCustomerCreation": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "always",
          "if_required"
        ],
        "type": "enum"
      }
    },
    "CheckoutDefaultFor": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "invoice",
          "subscription"
        ],
        "type": "enum"
      }
    },
    "CheckoutFundingType": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "bank_transfer"
        ],
        "type": "enum"
      }
    },
    "CheckoutInterval": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "day",
          "month",
          "week",
          "year"
        ],
        "type": "enum"
      }
    },
    "CheckoutLocale": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "auto",
          "bg",
          "cs"
        ],
        "type": "enum"
      }
    },
    "CheckoutMissingPaymentMethod": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "cancel",
          "create_invoice",
          "pause"
        ],
        "type": "enum"
      }
    },
    "CheckoutMode": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "payment",
          "setup",
          "subscription"
        ],
        "type": "enum"
      }
    },
    "CheckoutName": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "auto",
          "never"
        ],
        "type": "enum"
      }
    },
    "CheckoutPaymentMethodCollection": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "always",
          "if_required"
        ],
        "type": "enum"
      }
    },
    "CheckoutPaymentMethodTypes": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "acss_debit",
          "affirm"
        ],
        "type": "enum"
      }
    },
    "CheckoutPaymentSchedule": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "combined",
          "interval",
          "sporadic"
        ],
        "type": "enum"
      }
    },
    "CheckoutPermissions": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "balances",
          "ownership",
          "payment_method",
          "transactions"
        ],
        "type": "enum"
      }
    },
    "CheckoutPosition": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "auto",
          "hidden"
        ],
        "type": "enum"
      }
    },
    "CheckoutPreferredLocale": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "cs-CZ",
          "da-DK"
        ],
        "type": "enum"
      }
    },
    "CheckoutPrefetch": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "balances",
          "transactions"
        ],
        "type": "enum"
      }
    },
    "CheckoutPromotions": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "auto",
          "none"
        ],
        "type": "enum"
      }
    },
    "CheckoutProrationBehavior": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "create_prorations",
          "none"
        ],
        "type": "enum"
      }
    },
    "CheckoutRedirectOnCompletion": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "always",
          "if_required",
          "never"
        ],
        "type": "enum"
      }
    },
    "CheckoutRequestThreeDSecure": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "any",
          "automatic",
          "challenge"
        ],
        "type": "enum"
      }
    },
    "CheckoutRequestedAddressTypes": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "aba",
          "iban"
        ],
        "type": "enum"
      }
    },
    "CheckoutSetupFutureUsage": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "off_session",
          "on_session"
        ],
        "type": "enum"
      }
    },
    "CheckoutShipping": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "auto",
          "never"
        ],
        "type": "enum"
      }
    },
    "CheckoutSubmitType": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "auto",
          "book",
          "donate",
          "pay"
        ],
        "type": "enum"
      }
    },
    "CheckoutTaxBehavior": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "exclusive",
          "inclusive",
          "unspecified"
        ],
        "type": "enum"
      }
    },
    "CheckoutTermsOfService": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "none",
          "required"
        ],
        "type": "enum"
      }
    },
    "CheckoutTransactionType": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "business",
          "personal"
        ],
        "type": "enum"
      }
    },
    "CheckoutType": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "account",
          "self"
        ],
        "type": "enum"
      }
    },
    "CheckoutUiMode": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "embedded",
          "hosted"
        ],
        "type": "enum"
      }
    },
    "CheckoutUnit": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "business_day",
          "day",
          "hour",
          "month",
          "week"
        ],
        "type": "enum"
      }
    },
    "CheckoutVerificationMethod": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "automatic",
          "instant",
          "microdeposits"
        ],
        "type": "enum"
      }
    },
    "FilesPurpose": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "account_requirement",
          "additional_verification",
          "business_icon",
          "business_logo",
          "customer_signature",
          "dispute_evidence",
          "identity_document",
          "issuing_regulatory_reporting",
          "pci_document",
          "tax_document_user_upload",
          "terminal_reader_splashscreen"
        ],
        "type": "enum"
      }
    },
    "Float64": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "type": "float64"
      }
    },
    "Int32": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "type": "int32"
      }
    },
    "Int64": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "type": "int64"
      }
    },
    "InvoicesCollectionMethod": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "charge_automatically",
          "send_invoice"
        ],
        "type": "enum"
      }
    },
    "InvoicesObject": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "list"
        ],
        "type": "enum"
      }
    },
    "InvoicesStatus": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "draft",
          "open",
          "paid",
          "uncollectible",
          "void"
        ],
        "type": "enum"
      }
    },
    "JSON": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "type": "json"
      }
    },
    "OrderStatus": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "placed",
          "approved",
          "delivered"
        ],
        "type": "enum"
      }
    },
    "PaymentMethodAffirm": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "type": "json"
      }
    },
    "PetStatus": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "available",
          "pending",
          "sold"
        ],
        "type": "enum"
      }
    },
    "PostCheckoutSessionsBodyCustomFieldsLabelType": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "custom"
        ],
        "type": "enum"
      }
    },
    "PostCheckoutSessionsBodyCustomFieldsType": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "dropdown",
          "numeric",
          "text"
        ],
        "type": "enum"
      }
    },
    "PostCheckoutSessionsBodyPaymentMethodOptionsAcssDebitSetupFutureUsage": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "none",
          "off_session",
          "on_session"
        ],
        "type": "enum"
      }
    },
    "PostCheckoutSessionsBodyPaymentMethodOptionsAffirmSetupFutureUsage": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "none"
        ],
        "type": "enum"
      }
    },
    "PostCheckoutSessionsBodyPaymentMethodOptionsAfterpayClearpaySetupFutureUsage": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "none"
        ],
        "type": "enum"
      }
    },
    "PostCheckoutSessionsBodyPaymentMethodOptionsAlipaySetupFutureUsage": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "none"
        ],
        "type": "enum"
      }
    },
    "PostCheckoutSessionsBodyPaymentMethodOptionsAuBecsDebitSetupFutureUsage": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "none"
        ],
        "type": "enum"
      }
    },
    "PostCheckoutSessionsBodyPaymentMethodOptionsBacsDebitSetupFutureUsage": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "none",
          "off_session",
          "on_session"
        ],
        "type": "enum"
      }
    },
    "PostCheckoutSessionsBodyPaymentMethodOptionsBancontactSetupFutureUsage": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "none"
        ],
        "type": "enum"
      }
    },
    "PostCheckoutSessionsBodyPaymentMethodOptionsBoletoSetupFutureUsage": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "none",
          "off_session",
          "on_session"
        ],
        "type": "enum"
      }
    },
    "PostCheckoutSessionsBodyPaymentMethodOptionsCashappSetupFutureUsage": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "none",
          "off_session",
          "on_session"
        ],
        "type": "enum"
      }
    },
    "PostCheckoutSessionsBodyPaymentMethodOptionsCustomerBalanceBankTransferType": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "eu_bank_transfer",
          "gb_bank_transfer"
        ],
        "type": "enum"
      }
    },
    "PostCheckoutSessionsBodyPaymentMethodOptionsCustomerBalanceSetupFutureUsage": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "none"
        ],
        "type": "enum"
      }
    },
    "PostCheckoutSessionsBodyPaymentMethodOptionsEpsSetupFutureUsage": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "none"
        ],
        "type": "enum"
      }
    },
    "PostCheckoutSessionsBodyPaymentMethodOptionsFpxSetupFutureUsage": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "none"
        ],
        "type": "enum"
      }
    },
    "PostCheckoutSessionsBodyPaymentMethodOptionsGiropaySetupFutureUsage": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "none"
        ],
        "type": "enum"
      }
    },
    "PostCheckoutSessionsBodyPaymentMethodOptionsGrabpaySetupFutureUsage": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "none"
        ],
        "type": "enum"
      }
    },
    "PostCheckoutSessionsBodyPaymentMethodOptionsIdealSetupFutureUsage": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "none"
        ],
        "type": "enum"
      }
    },
    "PostCheckoutSessionsBodyPaymentMethodOptionsKlarnaSetupFutureUsage": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "none"
        ],
        "type": "enum"
      }
    },
    "PostCheckoutSessionsBodyPaymentMethodOptionsKonbiniSetupFutureUsage": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "none"
        ],
        "type": "enum"
      }
    },
    "PostCheckoutSessionsBodyPaymentMethodOptionsLinkSetupFutureUsage": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "none",
          "off_session"
        ],
        "type": "enum"
      }
    },
    "PostCheckoutSessionsBodyPaymentMethodOptionsOxxoSetupFutureUsage": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "none"
        ],
        "type": "enum"
      }
    },
    "PostCheckoutSessionsBodyPaymentMethodOptionsP24SetupFutureUsage": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "none"
        ],
        "type": "enum"
      }
    },
    "PostCheckoutSessionsBodyPaymentMethodOptionsPaynowSetupFutureUsage": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "none"
        ],
        "type": "enum"
      }
    },
    "PostCheckoutSessionsBodyPaymentMethodOptionsPaypalCaptureMethod": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "",
          "manual"
        ],
        "type": "enum"
      }
    },
    "PostCheckoutSessionsBodyPaymentMethodOptionsPaypalSetupFutureUsage": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "",
          "none",
          "off_session"
        ],
        "type": "enum"
      }
    },
    "PostCheckoutSessionsBodyPaymentMethodOptionsRevolutPaySetupFutureUsage": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "none",
          "off_session"
        ],
        "type": "enum"
      }
    },
    "PostCheckoutSessionsBodyPaymentMethodOptionsSepaDebitSetupFutureUsage": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "none",
          "off_session",
          "on_session"
        ],
        "type": "enum"
      }
    },
    "PostCheckoutSessionsBodyPaymentMethodOptionsSofortSetupFutureUsage": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "none"
        ],
        "type": "enum"
      }
    },
    "PostCheckoutSessionsBodyPaymentMethodOptionsUsBankAccountSetupFutureUsage": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "none",
          "off_session",
          "on_session"
        ],
        "type": "enum"
      }
    },
    "PostCheckoutSessionsBodyPaymentMethodOptionsUsBankAccountVerificationMethod": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "automatic",
          "instant"
        ],
        "type": "enum"
      }
    },
    "PostCheckoutSessionsBodyPaymentMethodOptionsWechatPaySetupFutureUsage": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "none"
        ],
        "type": "enum"
      }
    },
    "PostCheckoutSessionsBodyShippingOptionsShippingRateDataType": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "fixed_amount"
        ],
        "type": "enum"
      }
    },
    "SearchIn": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "projects",
          "packages"
        ],
        "type": "enum"
      }
    },
    "SnakeObjectIdStatus": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "placed",
          "approved",
          "delivered"
        ],
        "type": "enum"
      }
    },
    "String": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "type": "string"
      }
    },
    "TestHelpersCode": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "account_closed",
          "account_frozen",
          "bank_account_restricted",
          "bank_ownership_changed",
          "debit_not_authorized",
          "incorrect_account_holder_address",
          "incorrect_account_holder_name",
          "incorrect_account_holder_tax_id",
          "insufficient_funds",
          "invalid_account_number",
          "invalid_currency",
          "no_account",
          "other"
        ],
        "type": "enum"
      }
    },
    "TimestampTZ": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "type": "timestamptz"
      }
    },
    "TreasuryInboundTransferObject": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "treasury.inbound_transfer"
        ],
        "type": "enum"
      }
    },
    "TreasuryInboundTransferStatus": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "canceled",
          "failed",
          "processing",
          "succeeded"
        ],
        "type": "enum"
      }
    },
    "TreasuryInboundTransfersResourceFailureDetailsCode": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "account_closed",
          "account_frozen",
          "bank_account_restricted",
          "bank_ownership_changed",
          "debit_not_authorized",
          "incorrect_account_holder_address",
          "incorrect_account_holder_name",
          "incorrect_account_holder_tax_id",
          "insufficient_funds",
          "invalid_account_number",
          "invalid_currency",
          "no_account",
          "other"
        ],
        "type": "enum"
      }
    },
    "UUID": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "type": "uuid"
      }
    },
    "UnixTime": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "type": "int32"
      }
    }
  }
}
