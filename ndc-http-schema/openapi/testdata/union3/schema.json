{
  "collections": [],
  "functions": [
    {
      "arguments": {
        "customer": {
          "type": {
            "name": "String",
            "type": "named"
          }
        },
        "expand": {
          "description": "Specifies which fields in the response should be expanded.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "String",
                "type": "named"
              },
              "type": "array"
            }
          }
        },
        "id": {
          "type": {
            "name": "String",
            "type": "named"
          }
        }
      },
      "description": "Retrieve a specified source for a given customer.",
      "name": "GetCustomersCustomerSourcesId",
      "result_type": {
        "name": "PaymentSource",
        "type": "named"
      }
    },
    {
      "arguments": {},
      "description": "GET /pets",
      "name": "getPets",
      "result_type": {
        "element_type": {
          "name": "GetPetsResult",
          "type": "named"
        },
        "type": "array"
      }
    }
  ],
  "object_types": {
    "CatInput": {
      "fields": {
        "age": {
          "type": {
            "name": "Int32",
            "type": "named"
          }
        },
        "id": {
          "type": {
            "name": "String",
            "type": "named"
          }
        },
        "metadata": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "JSON",
                "type": "named"
              },
              "type": "array"
            }
          }
        },
        "type": {
          "type": {
            "name": "CatType",
            "type": "named"
          }
        }
      }
    },
    "DogInput": {
      "fields": {
        "icon": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "id": {
          "type": {
            "name": "String",
            "type": "named"
          }
        },
        "text": {
          "type": {
            "name": "String",
            "type": "named"
          }
        },
        "type": {
          "type": {
            "name": "DogType",
            "type": "named"
          }
        }
      }
    },
    "GetPetsResult": {
      "fields": {
        "age": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          }
        },
        "icon": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "id": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "metadata": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "JSON",
                "type": "named"
              },
              "type": "array"
            }
          }
        },
        "text": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "type": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "GetPetsResultTypeEnum",
              "type": "named"
            }
          }
        }
      }
    },
    "PaymentSource": {
      "fields": {
        "allow_redisplay": {
          "description": "This field indicates whether this payment method can be shown again to its customer in a checkout flow. Stripe products such as Checkout and Elements use this field to determine whether a payment method can be shown as a saved payment method in a checkout flow. The field defaults to unspecified.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "CardAllowRedisplay",
              "type": "named"
            }
          }
        },
        "available_payout_methods": {
          "description": "A set of available payout methods for this card. Only values from this set should be passed as the `method` when creating a payout.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "CardAvailablePayoutMethods",
                "type": "named"
              },
              "type": "array"
            }
          }
        },
        "brand": {
          "description": "Card brand. Can be `American Express`, `Diners Club`, `Discover`, `Eftpos Australia`, `Girocard`, `JCB`, `MasterCard`, `UnionPay`, `Visa`, or `Unknown`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "country": {
          "description": "The account's country.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "created": {
          "description": "Time at which the account was connected. Measured in seconds since the Unix epoch.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "UnixTime",
              "type": "named"
            }
          }
        },
        "currency": {
          "description": "Three-letter [ISO code for currency](https://www.iso.org/iso-4217-currency-codes.html) in lowercase. Must be a [supported currency](https://docs.stripe.com/currencies). Only applicable on accounts (not customers or recipients). The card can be used as a transfer destination for funds in this currency. This property is only available for accounts where [controller.requirement_collection](/api/accounts/object#account_object-controller-requirement_collection) is `application`, which includes Custom accounts.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "cvc_check": {
          "description": "If a CVC was provided, results of the check: `pass`, `fail`, `unavailable`, or `unchecked`. A result of unchecked indicates that CVC was provided but hasn't been checked yet. Checks are typically performed when attaching a card to a Customer object, or when creating a charge. For more details, see [Check if a card is valid without a charge](https://support.stripe.com/questions/check-if-a-card-is-valid-without-a-charge).",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "default_currency": {
          "description": "Three-letter ISO currency code representing the default currency for the account. This must be a currency that [Stripe supports in the account's country](https://stripe.com/docs/payouts).",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "default_for_currency": {
          "description": "Whether this bank account is the default external account for its currency.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          }
        },
        "details_submitted": {
          "description": "Whether account details have been submitted. Accounts with Stripe Dashboard access, which includes Standard accounts, cannot receive payouts before this is true. Accounts where this is false should be directed to [an onboarding flow](/connect/onboarding) to finish submitting account details.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          }
        },
        "dynamic_last4": {
          "description": "(For tokenized numbers only.) The last four digits of the device account number.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "email": {
          "description": "An email address associated with the account. It's not used for authentication and Stripe doesn't market to this field without explicit approval from the platform.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "exp_month": {
          "description": "Two-digit number representing the card's expiration month.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          }
        },
        "exp_year": {
          "description": "Four-digit number representing the card's expiration year.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          }
        },
        "fingerprint": {
          "description": "Uniquely identifies this particular bank account. You can use this attribute to check whether two bank accounts are the same.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "funding": {
          "description": "Card funding type. Can be `credit`, `debit`, `prepaid`, or `unknown`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "id": {
          "description": "Unique identifier for the object.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "iin": {
          "description": "Issuer identification number of the card.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "last4": {
          "description": "The last four digits of the bank account number.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "name": {
          "description": "Cardholder name.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "object": {
          "description": "String representing the object's type. Objects of the same type share the same value.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "PaymentSourceObjectEnum",
              "type": "named"
            }
          }
        },
        "regulated_status": {
          "description": "Status of a card based on the card issuer.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "CardRegulatedStatus",
              "type": "named"
            }
          }
        },
        "routing_number": {
          "description": "The routing transit number for the bank account.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "statement_descriptor": {
          "description": "Extra information about a source. This will appear on your customer's statement every time you charge the source.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "status": {
          "description": "For bank accounts, possible values are `new`, `validated`, `verified`, `verification_failed`, or `errored`. A bank account that hasn't had any activity or validation performed is `new`. If Stripe can determine that the bank account exists, its status will be `validated`. Note that there often isnt enough information to know (e.g., for smaller credit unions), and the validation is not always run. If customer bank account verification has succeeded, the bank account status will be `verified`. If the verification failed for any reason, such as microdeposit failure, the status will be `verification_failed`. If a payout sent to this bank account fails, we'll set the status to `errored` and will not continue to send [scheduled payouts](https://stripe.com/docs/payouts#payout-schedule) until the bank details are updated.  For external accounts, possible values are `new`, `errored` and `verification_failed`. If a payout fails, the status is set to `errored` and scheduled payouts are stopped until account details are updated. In the US and India, if we can't [verify the owner of the bank account](https://support.stripe.com/questions/bank-account-ownership-verification), we'll set the status to `verification_failed`. Other validations aren't run against external accounts because they're only used for payouts. This means the other statuses don't apply.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "tokenization_method": {
          "description": "If the card number is tokenized, this is the method that was used. Can be `android_pay` (includes Google Pay), `apple_pay`, `masterpass`, `visa_checkout`, or null.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "type": {
          "description": "The Stripe account type. Can be `standard`, `express`, `custom`, or `none`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "PaymentSourceTypeEnum",
              "type": "named"
            }
          }
        },
        "usage": {
          "description": "Either `reusable` or `single_use`. Whether this source should be reusable or not. Some source types may or may not be reusable by construction, while others may leave the option at creation. If an incompatible value is passed, an error will be returned.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        }
      }
    },
    "Pet": {
      "fields": {
        "age": {
          "type": {
            "name": "Int32",
            "type": "named"
          }
        },
        "icon": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "id": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "metadata": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "JSON",
                "type": "named"
              },
              "type": "array"
            }
          }
        },
        "text": {
          "type": {
            "name": "String",
            "type": "named"
          }
        },
        "type": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "PetTypeEnum",
              "type": "named"
            }
          }
        },
        "value": {
          "description": "The value of this recipient's custom field",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        }
      }
    }
  },
  "procedures": [
    {
      "arguments": {
        "body": {
          "description": "Request body of POST /pets",
          "type": {
            "name": "CatInput",
            "type": "named"
          }
        }
      },
      "description": "POST /pets",
      "name": "postPets_Cat",
      "result_type": {
        "name": "Pet",
        "type": "named"
      }
    },
    {
      "arguments": {
        "body": {
          "description": "Request body of POST /pets",
          "type": {
            "name": "DogInput",
            "type": "named"
          }
        }
      },
      "description": "POST /pets",
      "name": "postPets_Dog",
      "result_type": {
        "name": "Pet",
        "type": "named"
      }
    }
  ],
  "scalar_types": {
    "Boolean": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "type": "boolean"
      }
    },
    "CardAllowRedisplay": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "always",
          "limited",
          "unspecified"
        ],
        "type": "enum"
      }
    },
    "CardAvailablePayoutMethods": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "instant",
          "standard"
        ],
        "type": "enum"
      }
    },
    "CardRegulatedStatus": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "regulated",
          "unregulated"
        ],
        "type": "enum"
      }
    },
    "CatType": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "cat"
        ],
        "type": "enum"
      }
    },
    "DogType": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "dog"
        ],
        "type": "enum"
      }
    },
    "GetPetsResultTypeEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "cat",
          "dog"
        ],
        "type": "enum"
      }
    },
    "Int32": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "type": "int32"
      }
    },
    "JSON": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "type": "json"
      }
    },
    "PaymentSourceObjectEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "bank_account",
          "card",
          "source"
        ],
        "type": "enum"
      }
    },
    "PaymentSourceTypeEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "ach_credit_transfer",
          "ach_debit",
          "acss_debit",
          "alipay",
          "au_becs_debit",
          "bancontact",
          "card",
          "card_present",
          "custom",
          "eps",
          "express",
          "giropay",
          "ideal",
          "klarna",
          "multibanco",
          "none",
          "p24",
          "sepa_debit",
          "sofort",
          "standard",
          "three_d_secure",
          "wechat"
        ],
        "type": "enum"
      }
    },
    "PetTypeEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "cat",
          "dog"
        ],
        "type": "enum"
      }
    },
    "String": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "type": "string"
      }
    },
    "UnixTime": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "type": "int32"
      }
    }
  }
}
