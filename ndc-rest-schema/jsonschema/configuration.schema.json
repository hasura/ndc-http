{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "$id": "https://github.com/hasura/ndc-rest/ndc-rest-schema/configuration/configuration",
  "$ref": "#/$defs/Configuration",
  "$defs": {
    "ConfigItem": {
      "properties": {
        "file": {
          "type": "string",
          "description": "File path needs to be converted"
        },
        "spec": {
          "$ref": "#/$defs/SchemaSpecType",
          "description": "The API specification of the file, is one of oas3 (openapi3), oas2 (openapi2)"
        },
        "methodAlias": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "description": "Alias names for HTTP method. Used for prefix renaming, e.g. getUsers, postUser"
        },
        "prefix": {
          "type": "string",
          "description": "Add a prefix to the function and procedure names"
        },
        "trimPrefix": {
          "type": "string",
          "description": "Trim the prefix in URL, e.g. /v1"
        },
        "envPrefix": {
          "type": "string",
          "description": "The environment variable prefix for security values, e.g. PET_STORE"
        },
        "pure": {
          "type": "boolean",
          "description": "Return the pure NDC schema only"
        },
        "strict": {
          "type": "boolean",
          "description": "Require strict validation"
        },
        "patchBefore": {
          "items": {
            "$ref": "#/$defs/PatchConfig"
          },
          "type": "array",
          "description": "Patch files to be applied into the input file before converting"
        },
        "patchAfter": {
          "items": {
            "$ref": "#/$defs/PatchConfig"
          },
          "type": "array",
          "description": "Patch files to be applied into the input file after converting"
        },
        "allowedContentTypes": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Allowed content types. All content types are allowed by default"
        },
        "output": {
          "type": "string",
          "description": "The location where the ndc schema file will be generated. Print to stdout if not set"
        },
        "distributed": {
          "type": "boolean",
          "description": "Distributed enables distributed schema"
        },
        "timeout": {
          "$ref": "#/$defs/EnvInt",
          "description": "configure the request timeout in seconds."
        },
        "retry": {
          "$ref": "#/$defs/RetryPolicySetting"
        }
      },
      "additionalProperties": false,
      "type": "object",
      "required": [
        "file"
      ],
      "description": "ConfigItem extends the ConvertConfig with advanced options"
    },
    "Configuration": {
      "properties": {
        "output": {
          "type": "string"
        },
        "strict": {
          "type": "boolean",
          "description": "Require strict validation"
        },
        "forwardHeaders": {
          "$ref": "#/$defs/ForwardHeadersSettings"
        },
        "files": {
          "items": {
            "$ref": "#/$defs/ConfigItem"
          },
          "type": "array"
        }
      },
      "additionalProperties": false,
      "type": "object",
      "required": [
        "strict",
        "forwardHeaders",
        "files"
      ],
      "description": "Configuration contains required settings for the connector."
    },
    "EnvInt": {
      "anyOf": [
        {
          "required": [
            "value"
          ],
          "title": "value"
        },
        {
          "required": [
            "env"
          ],
          "title": "env"
        }
      ],
      "properties": {
        "value": {
          "type": "integer"
        },
        "env": {
          "type": "string"
        }
      },
      "additionalProperties": false,
      "type": "object"
    },
    "ForwardHeadersSettings": {
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "argumentField": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ]
        },
        "responseHeadersField": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ]
        },
        "responseResultField": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ]
        }
      },
      "additionalProperties": false,
      "type": "object",
      "required": [
        "enabled",
        "argumentField",
        "responseHeadersField",
        "responseResultField"
      ],
      "description": "ForwardHeadersSettings hold settings of header forwarding from Hasura engine"
    },
    "PatchConfig": {
      "properties": {
        "path": {
          "type": "string"
        },
        "strategy": {
          "type": "string",
          "enum": [
            "merge",
            "json6902"
          ]
        }
      },
      "additionalProperties": false,
      "type": "object",
      "required": [
        "path",
        "strategy"
      ]
    },
    "RetryPolicySetting": {
      "properties": {
        "times": {
          "$ref": "#/$defs/EnvInt",
          "description": "Number of retry times"
        },
        "delay": {
          "$ref": "#/$defs/EnvInt",
          "description": "Delay retry delay in milliseconds"
        },
        "httpStatus": {
          "items": {
            "type": "integer"
          },
          "type": "array",
          "description": "HTTPStatus retries if the remote service returns one of these http status"
        }
      },
      "additionalProperties": false,
      "type": "object",
      "description": "RetryPolicySetting represents retry policy settings"
    },
    "SchemaSpecType": {
      "type": "string",
      "enum": [
        "oas3",
        "oas2",
        "openapi3",
        "openapi2",
        "ndc"
      ]
    }
  }
}