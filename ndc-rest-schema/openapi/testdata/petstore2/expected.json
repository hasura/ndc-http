{
  "$schema": "https://raw.githubusercontent.com/hasura/ndc-rest-schema/main/jsonschema/ndc-rest-schema.jsonschema",
  "settings": {
    "servers": [
      {
        "url": "{{SERVER_URL:-https://petstore.swagger.io/v2}}"
      }
    ],
    "timeout": "{{TIMEOUT}}",
    "retry": {
      "times": "{{RETRY_TIMES}}",
      "delay": "{{RETRY_DELAY}}",
      "httpStatus": "{{RETRY_HTTP_STATUS}}"
    },
    "securitySchemes": {
      "api_key": {
        "type": "apiKey",
        "value": "{{API_KEY}}",
        "in": "header",
        "name": "api_key"
      },
      "basic": {
        "type": "http",
        "value": "{{BASIC_TOKEN}}",
        "header": "Authorization",
        "scheme": "Basic"
      },
      "petstore_auth": {
        "type": "oauth2",
        "flows": {
          "implicit": {
            "authorizationUrl": "https://petstore.swagger.io/oauth/authorize",
            "scopes": {
              "read:pets": "read your pets",
              "write:pets": "modify pets in your account"
            }
          }
        }
      }
    },
    "version": "1.0.6"
  },
  "functions": [
    {
      "request": {
        "url": "/pet/findByStatus",
        "method": "get",
        "security": [
          {
            "petstore_auth": [
              "write:pets",
              "read:pets"
            ]
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "status": {
          "description": "Status values that need to be considered for filter",
          "type": {
            "element_type": {
              "name": "String",
              "type": "named"
            },
            "type": "array"
          },
          "rest": {
            "name": "status",
            "in": "query",
            "schema": {
              "type": [
                "array"
              ]
            }
          }
        }
      },
      "description": "Finds Pets by status",
      "name": "findPetsByStatus",
      "result_type": {
        "element_type": {
          "name": "Pet",
          "type": "named"
        },
        "type": "array"
      }
    },
    {
      "request": {
        "url": "/pet/findByTags",
        "method": "get",
        "security": [
          {
            "petstore_auth": [
              "write:pets",
              "read:pets"
            ]
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "tags": {
          "description": "Tags to filter by",
          "type": {
            "element_type": {
              "name": "String",
              "type": "named"
            },
            "type": "array"
          },
          "rest": {
            "name": "tags",
            "in": "query",
            "schema": {
              "type": [
                "array"
              ]
            }
          }
        }
      },
      "description": "Finds Pets by tags",
      "name": "findPetsByTags",
      "result_type": {
        "element_type": {
          "name": "Pet",
          "type": "named"
        },
        "type": "array"
      }
    },
    {
      "request": {
        "url": "/pet/{petId}",
        "method": "get",
        "security": [
          {
            "api_key": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "petId": {
          "description": "ID of pet to return",
          "type": {
            "name": "Int64",
            "type": "named"
          },
          "rest": {
            "name": "petId",
            "in": "path",
            "schema": {
              "type": [
                "integer"
              ]
            }
          }
        }
      },
      "description": "Find pet by ID",
      "name": "getPetById",
      "result_type": {
        "name": "Pet",
        "type": "named"
      }
    },
    {
      "request": {
        "url": "/store/order/{orderId}",
        "method": "get",
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "orderId": {
          "description": "ID of pet that needs to be fetched",
          "type": {
            "name": "Int64",
            "type": "named"
          },
          "rest": {
            "name": "orderId",
            "in": "path",
            "schema": {
              "type": [
                "integer"
              ],
              "maximum": 10,
              "minimum": 1
            }
          }
        }
      },
      "description": "Find purchase order by ID",
      "name": "getOrderById",
      "result_type": {
        "name": "Order",
        "type": "named"
      }
    },
    {
      "request": {
        "url": "/store/inventory",
        "method": "get",
        "security": [
          {
            "api_key": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {},
      "description": "Returns pet inventories by status",
      "name": "getInventory",
      "result_type": {
        "name": "JSON",
        "type": "named"
      }
    },
    {
      "request": {
        "url": "/user/{username}",
        "method": "get",
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "username": {
          "description": "The name that needs to be fetched. Use user1 for testing. ",
          "type": {
            "name": "String",
            "type": "named"
          },
          "rest": {
            "name": "username",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Get user by user name",
      "name": "getUserByName",
      "result_type": {
        "name": "User",
        "type": "named"
      }
    },
    {
      "request": {
        "url": "/user/login",
        "method": "get",
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "password": {
          "description": "The password for login in clear text",
          "type": {
            "name": "String",
            "type": "named"
          },
          "rest": {
            "name": "password",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "username": {
          "description": "The user name for login",
          "type": {
            "name": "String",
            "type": "named"
          },
          "rest": {
            "name": "username",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Logs user into the system",
      "name": "loginUser",
      "result_type": {
        "name": "String",
        "type": "named"
      }
    },
    {
      "request": {
        "url": "/snake",
        "method": "get",
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {},
      "description": "Get snake",
      "name": "getSnake",
      "result_type": {
        "name": "SnakeObject",
        "type": "named"
      }
    },
    {
      "request": {
        "url": "/clients",
        "method": "get",
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "client_name": {
          "description": "The name of the clients to filter by.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "rest": {
            "name": "client_name",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "limit": {
          "description": "The maximum amount of clients to returned, upper bound is 500 clients.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int64",
              "type": "named"
            }
          },
          "rest": {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ]
            }
          }
        },
        "offset": {
          "description": "The offset from where to start looking.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int64",
              "type": "named"
            }
          },
          "rest": {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ]
            }
          }
        },
        "owner": {
          "description": "The owner of the clients to filter by.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "rest": {
            "name": "owner",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "List OAuth 2.0 Clients",
      "name": "listOAuth2Clients",
      "result_type": {
        "element_type": {
          "name": "OAuth2Client",
          "type": "named"
        },
        "type": "array"
      }
    }
  ],
  "object_types": {
    "ApiResponse": {
      "fields": {
        "code": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "rest": {
            "type": [
              "integer"
            ],
            "format": "int32"
          }
        },
        "message": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "rest": {
            "type": [
              "string"
            ]
          }
        },
        "type": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "rest": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "Category": {
      "fields": {
        "id": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int64",
              "type": "named"
            }
          },
          "rest": {
            "type": [
              "integer"
            ],
            "format": "int64"
          }
        },
        "name": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "rest": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "OAuth2Client": {
      "fields": {
        "client_id": {
          "description": "ID  is the id for this client.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "rest": {
            "type": [
              "string"
            ]
          }
        },
        "client_name": {
          "description": "Name is the human-readable string name of the client to be presented to the\nend-user during authorization.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "rest": {
            "type": [
              "string"
            ]
          }
        },
        "client_secret": {
          "description": "Secret is the client's secret. The secret will be included in the create request as cleartext, and then\nnever again. The secret is stored using BCrypt so it is impossible to recover it. Tell your users\nthat they need to write the secret down as it will not be made available again.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "rest": {
            "type": [
              "string"
            ]
          }
        },
        "client_secret_expires_at": {
          "description": "SecretExpiresAt is an integer holding the time at which the client\nsecret will expire or 0 if it will not expire. The time is\nrepresented as the number of seconds from 1970-01-01T00:00:00Z as\nmeasured in UTC until the date/time of expiration.\n\nThis feature is currently not supported and it's value will always\nbe set to 0.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int64",
              "type": "named"
            }
          },
          "rest": {
            "type": [
              "integer"
            ],
            "format": "int64"
          }
        },
        "client_uri": {
          "description": "ClientURI is an URL string of a web page providing information about the client.\nIf present, the server SHOULD display this URL to the end-user in\na clickable fashion.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "rest": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "Order": {
      "fields": {
        "complete": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "rest": {
            "type": [
              "boolean"
            ]
          }
        },
        "id": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int64",
              "type": "named"
            }
          },
          "rest": {
            "type": [
              "integer"
            ],
            "format": "int64"
          }
        },
        "petId": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int64",
              "type": "named"
            }
          },
          "rest": {
            "type": [
              "integer"
            ],
            "format": "int64"
          }
        },
        "quantity": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "rest": {
            "type": [
              "integer"
            ],
            "format": "int32"
          }
        },
        "shipDate": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "rest": {
            "type": [
              "string"
            ],
            "format": "date-time"
          }
        },
        "status": {
          "description": "Order Status",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "OrderStatus",
              "type": "named"
            }
          },
          "rest": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "Pet": {
      "fields": {
        "category": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Category",
              "type": "named"
            }
          },
          "rest": {
            "type": null
          }
        },
        "id": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int64",
              "type": "named"
            }
          },
          "rest": {
            "type": [
              "integer"
            ],
            "format": "int64"
          }
        },
        "name": {
          "type": {
            "name": "String",
            "type": "named"
          },
          "rest": {
            "type": [
              "string"
            ]
          }
        },
        "photoUrls": {
          "type": {
            "element_type": {
              "name": "String",
              "type": "named"
            },
            "type": "array"
          },
          "rest": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "string"
              ]
            }
          }
        },
        "status": {
          "description": "pet status in the store",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "PetStatus",
              "type": "named"
            }
          },
          "rest": {
            "type": [
              "string"
            ]
          }
        },
        "tags": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "Tag",
                "type": "named"
              },
              "type": "array"
            }
          },
          "rest": {
            "type": [
              "array"
            ]
          }
        }
      }
    },
    "SnakeObject": {
      "fields": {
        "context": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "JSON",
              "type": "named"
            }
          },
          "rest": {
            "type": null
          }
        },
        "id": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int64",
              "type": "named"
            }
          },
          "rest": {
            "type": [
              "integer"
            ],
            "format": "int64"
          }
        },
        "username": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "rest": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "Tag": {
      "fields": {
        "id": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int64",
              "type": "named"
            }
          },
          "rest": {
            "type": [
              "integer"
            ],
            "format": "int64"
          }
        },
        "name": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "rest": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "UpdatePetWithFormBody": {
      "fields": {
        "name": {
          "description": "Updated name of the pet",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "rest": {
            "type": [
              "string"
            ]
          }
        },
        "status": {
          "description": "Updated status of the pet",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "rest": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "UploadFileBody": {
      "fields": {
        "additionalMetadata": {
          "description": "Additional data to pass to server",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "rest": {
            "type": [
              "string"
            ]
          }
        },
        "file": {
          "description": "file to upload",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Binary",
              "type": "named"
            }
          },
          "rest": {
            "type": [
              "file"
            ]
          }
        }
      }
    },
    "User": {
      "fields": {
        "email": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "rest": {
            "type": [
              "string"
            ]
          }
        },
        "firstName": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "rest": {
            "type": [
              "string"
            ]
          }
        },
        "id": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int64",
              "type": "named"
            }
          },
          "rest": {
            "type": [
              "integer"
            ],
            "format": "int64"
          }
        },
        "lastName": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "rest": {
            "type": [
              "string"
            ]
          }
        },
        "password": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "rest": {
            "type": [
              "string"
            ]
          }
        },
        "phone": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "rest": {
            "type": [
              "string"
            ]
          }
        },
        "userStatus": {
          "description": "User Status",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "rest": {
            "type": [
              "integer"
            ],
            "format": "int32"
          }
        },
        "username": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "rest": {
            "type": [
              "string"
            ]
          }
        }
      }
    }
  },
  "procedures": [
    {
      "request": {
        "url": "/pet/{petId}/uploadImage",
        "method": "post",
        "security": [
          {
            "petstore_auth": [
              "write:pets",
              "read:pets"
            ]
          }
        ],
        "requestBody": {
          "contentType": "multipart/form-data"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "body": {
          "description": "Form data of /pet/{petId}/uploadImage",
          "type": {
            "name": "UploadFileBody",
            "type": "named"
          },
          "rest": {
            "in": "formData",
            "schema": {
              "type": [
                "object"
              ]
            }
          }
        },
        "petId": {
          "description": "ID of pet to update",
          "type": {
            "name": "Int64",
            "type": "named"
          },
          "rest": {
            "name": "petId",
            "in": "path",
            "schema": {
              "type": [
                "integer"
              ]
            }
          }
        }
      },
      "description": "uploads an image",
      "name": "uploadFile",
      "result_type": {
        "name": "ApiResponse",
        "type": "named"
      }
    },
    {
      "request": {
        "url": "/pet",
        "method": "post",
        "security": [
          {
            "petstore_auth": [
              "write:pets",
              "read:pets"
            ]
          }
        ],
        "requestBody": {
          "contentType": "application/json"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "body": {
          "description": "Pet object that needs to be added to the store",
          "type": {
            "name": "Pet",
            "type": "named"
          },
          "rest": {
            "in": "body",
            "schema": {
              "type": null
            }
          }
        }
      },
      "description": "Add a new pet to the store",
      "name": "addPet",
      "result_type": {
        "type": "nullable",
        "underlying_type": {
          "name": "Boolean",
          "type": "named"
        }
      }
    },
    {
      "request": {
        "url": "/pet",
        "method": "put",
        "security": [
          {
            "petstore_auth": [
              "write:pets",
              "read:pets"
            ]
          }
        ],
        "requestBody": {
          "contentType": "application/json"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "body": {
          "description": "Pet object that needs to be added to the store",
          "type": {
            "name": "Pet",
            "type": "named"
          },
          "rest": {
            "in": "body",
            "schema": {
              "type": null
            }
          }
        }
      },
      "description": "Update an existing pet",
      "name": "updatePet",
      "result_type": {
        "type": "nullable",
        "underlying_type": {
          "name": "Boolean",
          "type": "named"
        }
      }
    },
    {
      "request": {
        "url": "/pet/{petId}",
        "method": "post",
        "security": [
          {
            "petstore_auth": [
              "write:pets",
              "read:pets"
            ]
          }
        ],
        "requestBody": {
          "contentType": "application/x-www-form-urlencoded"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "body": {
          "description": "Form data of /pet/{petId}",
          "type": {
            "name": "UpdatePetWithFormBody",
            "type": "named"
          },
          "rest": {
            "in": "formData",
            "schema": {
              "type": [
                "object"
              ]
            }
          }
        },
        "petId": {
          "description": "ID of pet that needs to be updated",
          "type": {
            "name": "Int64",
            "type": "named"
          },
          "rest": {
            "name": "petId",
            "in": "path",
            "schema": {
              "type": [
                "integer"
              ]
            }
          }
        }
      },
      "description": "Updates a pet in the store with form data",
      "name": "updatePetWithForm",
      "result_type": {
        "type": "nullable",
        "underlying_type": {
          "name": "Boolean",
          "type": "named"
        }
      }
    },
    {
      "request": {
        "url": "/pet/{petId}",
        "method": "delete",
        "security": [
          {
            "petstore_auth": [
              "write:pets",
              "read:pets"
            ]
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "api_key": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "rest": {
            "name": "api_key",
            "in": "header",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "petId": {
          "description": "Pet id to delete",
          "type": {
            "name": "Int64",
            "type": "named"
          },
          "rest": {
            "name": "petId",
            "in": "path",
            "schema": {
              "type": [
                "integer"
              ]
            }
          }
        }
      },
      "description": "Deletes a pet",
      "name": "deletePet",
      "result_type": {
        "type": "nullable",
        "underlying_type": {
          "name": "Boolean",
          "type": "named"
        }
      }
    },
    {
      "request": {
        "url": "/store/order",
        "method": "post",
        "requestBody": {
          "contentType": "application/json"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "body": {
          "description": "order placed for purchasing the pet",
          "type": {
            "name": "Order",
            "type": "named"
          },
          "rest": {
            "in": "body",
            "schema": {
              "type": null
            }
          }
        }
      },
      "description": "Place an order for a pet",
      "name": "placeOrder",
      "result_type": {
        "name": "Order",
        "type": "named"
      }
    },
    {
      "request": {
        "url": "/store/order/{orderId}",
        "method": "delete",
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "orderId": {
          "description": "ID of the order that needs to be deleted",
          "type": {
            "name": "Int64",
            "type": "named"
          },
          "rest": {
            "name": "orderId",
            "in": "path",
            "schema": {
              "type": [
                "integer"
              ],
              "minimum": 1
            }
          }
        }
      },
      "description": "Delete purchase order by ID",
      "name": "deleteOrder",
      "result_type": {
        "type": "nullable",
        "underlying_type": {
          "name": "Boolean",
          "type": "named"
        }
      }
    },
    {
      "request": {
        "url": "/user/{username}",
        "method": "put",
        "requestBody": {
          "contentType": "application/json"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "body": {
          "description": "Updated user object",
          "type": {
            "name": "User",
            "type": "named"
          },
          "rest": {
            "in": "body",
            "schema": {
              "type": null
            }
          }
        },
        "username": {
          "description": "name that need to be updated",
          "type": {
            "name": "String",
            "type": "named"
          },
          "rest": {
            "name": "username",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Updated user",
      "name": "updateUser",
      "result_type": {
        "type": "nullable",
        "underlying_type": {
          "name": "Boolean",
          "type": "named"
        }
      }
    },
    {
      "request": {
        "url": "/user/{username}",
        "method": "delete",
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "username": {
          "description": "The name that needs to be deleted",
          "type": {
            "name": "String",
            "type": "named"
          },
          "rest": {
            "name": "username",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Delete user",
      "name": "deleteUser",
      "result_type": {
        "type": "nullable",
        "underlying_type": {
          "name": "Boolean",
          "type": "named"
        }
      }
    },
    {
      "request": {
        "url": "/snake",
        "method": "post",
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {},
      "description": "Create snake",
      "name": "addSnake",
      "result_type": {
        "name": "SnakeObject",
        "type": "named"
      }
    },
    {
      "request": {
        "url": "/oauth2/register",
        "method": "post",
        "requestBody": {
          "contentType": "application/json"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "body": {
          "type": {
            "name": "OAuth2Client",
            "type": "named"
          },
          "rest": {
            "in": "body",
            "schema": {
              "type": null
            }
          }
        }
      },
      "name": "dynamicClientRegistrationCreateOAuth2Client",
      "result_type": {
        "name": "OAuth2Client",
        "type": "named"
      }
    }
  ],
  "scalar_types": {
    "Binary": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "type": "bytes"
      }
    },
    "Boolean": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "type": "boolean"
      }
    },
    "Int32": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "type": "int32"
      }
    },
    "Int64": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "type": "int64"
      }
    },
    "JSON": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "type": "json"
      }
    },
    "OrderStatus": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "placed",
          "approved",
          "delivered"
        ],
        "type": "enum"
      }
    },
    "PetStatus": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "available",
          "pending",
          "sold"
        ],
        "type": "enum"
      }
    },
    "String": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "type": "string"
      }
    },
    "TimestampTZ": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "type": "timestamptz"
      }
    }
  }
}
